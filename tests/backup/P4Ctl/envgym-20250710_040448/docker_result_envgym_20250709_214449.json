{
  "timestamp": "20250709_214449",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1752097488",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.25kB done\n#1 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:20.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/20] FROM docker.io/library/ubuntu:20.04@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214\n#4 DONE 0.0s\n\n#5 [ 3/20] RUN apt-get install -y python3.7 python3.7-venv python3.7-dev python3-pip ||     (apt-get update && apt-get install -y python3.7 python3.7-venv python3.7-dev python3-pip)\n#5 CACHED\n\n#6 [ 7/20] RUN apt-get install -y git\n#6 CACHED\n\n#7 [ 9/20] RUN apt-get install -y wget curl ca-certificates\n#7 CACHED\n\n#8 [ 8/20] RUN apt-get install -y tmux screen\n#8 CACHED\n\n#9 [ 4/20] RUN apt-get install -y build-essential gcc make\n#9 CACHED\n\n#10 [ 5/20] RUN apt-get install -y bison flex\n#10 CACHED\n\n#11 [ 6/20] RUN apt-get install -y ncat\n#11 CACHED\n\n#12 [ 2/20] RUN apt-get update &&     apt-get install -y software-properties-common &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update\n#12 CACHED\n\n#13 [10/20] RUN apt-get install -y libbpf-dev libelf-dev libz-dev pkg-config cmake libssl-dev libcap-dev python3-setuptools python3-wheel sudo\n#13 CACHED\n\n#14 [internal] load build context\n#14 transferring context: 377.04kB 0.0s done\n#14 DONE 0.0s\n\n#15 [11/20] RUN rm -rf /var/lib/apt/lists/*\n#15 DONE 0.2s\n\n#16 [12/20] RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 &&     update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3 1\n#16 0.360 update-alternatives: using /usr/bin/python3.7 to provide /usr/bin/python3 (python3) in auto mode\n#16 0.362 update-alternatives: <link> and <path> can't be the same\n#16 0.362 \n#16 0.362 Use 'update-alternatives --help' for program usage information.\n#16 ERROR: process \"/bin/sh -c update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 &&     update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3 1\" did not complete successfully: exit code: 2\n------\n > [12/20] RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 &&     update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3 1:\n0.360 update-alternatives: using /usr/bin/python3.7 to provide /usr/bin/python3 (python3) in auto mode\n0.362 update-alternatives: <link> and <path> can't be the same\n0.362 \n0.362 Use 'update-alternatives --help' for program usage information.\n------\n\n \u001b[33m3 warnings found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n - UndefinedVar: Usage of undefined variable '$HOME' (line 43)\n - UndefinedVar: Usage of undefined variable '$HOME' (line 44)\nenvgym.dockerfile:31\n--------------------\n  30 |     \n  31 | >>> RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 && \\\n  32 | >>>     update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3 1\n  33 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 &&     update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3 1\" did not complete successfully: exit code: 2\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}