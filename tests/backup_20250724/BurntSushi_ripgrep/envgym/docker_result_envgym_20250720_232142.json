{
  "timestamp": "20250720_232142",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753053659",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.27kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/15] FROM docker.io/library/ubuntu:22.04@sha256:1ec65b2719518e27d4d25f104d93f9fac60dc437f81452302406825c46fcc9cb\n#4 DONE 0.0s\n\n#5 [ 2/15] RUN apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         git         build-essential         pkg-config         musl-tools         libpcre2-dev         binutils         python3         dpkg-dev         grep         silversearcher-ag         sift         ugrep         bash-completion         zsh         fish         sudo         locales         cmake     && rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [ 3/15] RUN ARCH=amd64 &&     PT_VERSION=2.2.0 &&     curl -sSL -o /tmp/pt_linux.tar.gz https://github.com/monochromegane/the_platinum_searcher/releases/download/v${PT_VERSION}/pt_linux_${ARCH}.tar.gz &&     tar -xzf /tmp/pt_linux.tar.gz -C /tmp &&     sudo mv /tmp/pt_linux_${ARCH}/pt /usr/local/bin/pt &&     sudo chmod +x /usr/local/bin/pt &&     rm -rf /tmp/pt_linux*\n#6 CACHED\n\n#7 [internal] load build context\n#7 transferring context: 208.92kB 0.0s done\n#7 DONE 0.0s\n\n#8 [ 4/15] RUN locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8\n#8 0.202 Generating locales (this might take a while)...\n#8 0.205   en_US.UTF-8... done\n#8 1.739 Generation complete.\n#8 DONE 1.8s\n\n#9 [ 5/15] RUN useradd -ms /bin/bash cc &&     usermod -aG sudo cc &&     echo \"cc ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n#9 DONE 0.4s\n\n#10 [ 6/15] WORKDIR /home/cc\n#10 DONE 0.0s\n\n#11 [ 7/15] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable &&     rustup update stable &&     rustup toolchain install 1.72.0 &&     rustup default 1.72.0 &&     rustup component add rustfmt\n#11 0.524 info: downloading installer\n#11 1.180 info: profile set to 'default'\n#11 1.180 info: default host triple is x86_64-unknown-linux-gnu\n#11 1.180 info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n#11 1.398 info: latest update on 2025-06-26, rust version 1.88.0 (6b00bc388 2025-06-23)\n#11 1.398 info: downloading component 'cargo'\n#11 1.552 info: downloading component 'clippy'\n#11 1.647 info: downloading component 'rust-docs'\n#11 2.135 info: downloading component 'rust-std'\n#11 2.816 info: downloading component 'rustc'\n#11 5.923 info: downloading component 'rustfmt'\n#11 6.026 info: installing component 'cargo'\n#11 6.891 info: installing component 'clippy'\n#11 7.244 info: installing component 'rust-docs'\n#11 9.507 info: installing component 'rust-std'\n#11 12.16 info: installing component 'rustc'\n#11 18.39 info: installing component 'rustfmt'\n#11 18.75 info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n#11 18.75 \n#11 18.76   stable-x86_64-unknown-linux-gnu installed - rustc 1.88.0 (6b00bc388 2025-06-23)\n#11 18.76 \n#11 18.76 \n#11 18.76 Rust is installed now. Great!\n#11 18.76 \n#11 18.76 To get started you may need to restart your current shell.\n#11 18.76 This would reload your PATH environment variable to include\n#11 18.76 Cargo's bin directory ($HOME/.cargo/bin).\n#11 18.76 \n#11 18.76 To configure your current shell, you need to source\n#11 18.76 the corresponding env file under $HOME/.cargo.\n#11 18.76 \n#11 18.76 This is usually done by running one of the following (note the leading DOT):\n#11 18.76 . \"$HOME/.cargo/env\"            # For sh/bash/zsh/ash/dash/pdksh\n#11 18.76 source \"$HOME/.cargo/env.fish\"  # For fish\n#11 18.76 source $\"($nu.home-path)/.cargo/env.nu\"  # For nushell\n#11 18.86 info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n#11 18.92 \n#11 18.93   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.88.0 (6b00bc388 2025-06-23)\n#11 18.93 \n#11 18.93 info: checking for self-update\n#11 19.04 info: syncing channel updates for '1.72.0-x86_64-unknown-linux-gnu'\n#11 19.16 info: latest update on 2023-08-24, rust version 1.72.0 (5680fa18f 2023-08-23)\n#11 19.16 info: downloading component 'cargo'\n#11 19.26 info: downloading component 'clippy'\n#11 19.32 info: downloading component 'rust-docs'\n#11 19.59 info: downloading component 'rust-std'\n#11 19.95 info: downloading component 'rustc'\n#11 21.41 info: downloading component 'rustfmt'\n#11 21.46 info: installing component 'cargo'\n#11 22.23 info: installing component 'clippy'\n#11 22.55 info: installing component 'rust-docs'\n#11 24.17 info: installing component 'rust-std'\n#11 26.62 info: installing component 'rustc'\n#11 31.85 info: installing component 'rustfmt'\n#11 32.22 \n#11 32.24   1.72.0-x86_64-unknown-linux-gnu installed - rustc 1.72.0 (5680fa18f 2023-08-23)\n#11 32.24 \n#11 32.24 info: checking for self-update\n#11 32.33 info: using existing install for '1.72.0-x86_64-unknown-linux-gnu'\n#11 32.36 info: default toolchain set to '1.72.0-x86_64-unknown-linux-gnu'\n#11 32.36 \n#11 32.38   1.72.0-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0 (5680fa18f 2023-08-23)\n#11 32.38 \n#11 32.51 info: component 'rustfmt' for target 'x86_64-unknown-linux-gnu' is up to date\n#11 DONE 38.3s\n\n#12 [ 8/15] RUN cargo install cargo-deb\n#12 0.263     Updating crates.io index\n#12 0.347  Downloading crates ...\n#12 0.385   Downloaded cargo-deb v3.2.1\n#12 0.407   Installing cargo-deb v3.2.1\n#12 0.437     Updating crates.io index\n#12 1.139  Downloading crates ...\n#12 1.196   Downloaded anstyle-parse v0.2.7\n#12 1.201   Downloaded anstyle v1.0.11\n#12 1.205   Downloaded bitflags v2.9.1\n#12 1.216   Downloaded utf8parse v0.2.2\n#12 1.218   Downloaded ar v0.9.0\n#12 1.221   Downloaded bumpalo v3.19.0\n#12 1.228   Downloaded anstyle-query v1.1.3\n#12 1.231   Downloaded anstream v0.6.19\n#12 1.235   Downloaded aho-corasick v1.1.3\n#12 1.247   Downloaded quick-error v2.0.1\n#12 1.250   Downloaded winnow v0.7.12\n#12 1.264   Downloaded xz2 v0.1.7\n#12 1.267   Downloaded toml_write v0.1.2\n#12 1.269   Downloaded serde v1.0.219\n#12 1.274   Downloaded unicode-ident v1.0.18\n#12 1.280   Downloaded zopfli v0.8.2\n#12 1.286   Downloaded syn v2.0.104\n#12 1.301   Downloaded regex-automata v0.4.9\n#12 1.324   Downloaded lzma-sys v0.1.20\n#12 1.362   Downloaded linux-raw-sys v0.9.4\n#12 1.442   Downloaded libc v0.2.174\n#12 1.475   Downloaded rustix v1.0.8\n#12 1.504   Downloaded regex-syntax v0.8.5\n#12 1.515   Downloaded regex v1.11.1\n#12 1.530   Downloaded toml_edit v0.22.27\n#12 1.535   Downloaded tempfile v3.20.0\n#12 1.538   Downloaded tar v0.4.44\n#12 1.541   Downloaded serde_derive v1.0.219\n#12 1.545   Downloaded rayon v1.10.0\n#12 1.555   Downloaded quote v1.0.40\n#12 1.558   Downloaded memchr v2.7.5\n#12 1.564   Downloaded log v0.4.27\n#12 1.566   Downloaded indexmap v2.10.0\n#12 1.572   Downloaded getrandom v0.3.3\n#12 1.575   Downloaded elf v0.7.4\n#12 1.579   Downloaded crossbeam-utils v0.8.21\n#12 1.582   Downloaded crc32fast v1.5.0\n#12 1.584   Downloaded clap_builder v4.5.41\n#12 1.592   Downloaded cc v1.2.30\n#12 1.597   Downloaded strsim v0.11.1\n#12 1.598   Downloaded serde_spanned v0.6.9\n#12 1.599   Downloaded once_cell v1.21.3\n#12 1.602   Downloaded is_terminal_polyfill v1.70.1\n#12 1.603   Downloaded hashbrown v0.15.4\n#12 1.609   Downloaded filetime v0.2.25\n#12 1.611   Downloaded errno v0.3.13\n#12 1.612   Downloaded env_logger v0.11.8\n#12 1.615   Downloaded env_filter v0.1.3\n#12 1.616   Downloaded crossbeam-deque v0.8.6\n#12 1.618   Downloaded colorchoice v1.0.4\n#12 1.619   Downloaded clap v4.5.41\n#12 1.628   Downloaded cfg-if v1.0.1\n#12 1.629   Downloaded toml_datetime v0.6.11\n#12 1.631   Downloaded toml v0.8.23\n#12 1.633   Downloaded shlex v1.3.0\n#12 1.635   Downloaded ryu v1.0.20\n#12 1.638   Downloaded pkg-config v0.3.32\n#12 1.640   Downloaded itoa v1.0.15\n#12 1.641   Downloaded glob v0.3.2\n#12 1.642   Downloaded fastrand v2.3.0\n#12 1.644   Downloaded either v1.15.0\n#12 1.645   Downloaded clap_lex v0.7.5\n#12 1.647   Downloaded cargo_toml v0.22.1\n#12 1.648   Downloaded simd-adler32 v0.3.7\n#12 1.650   Downloaded serde_json v1.0.141\n#12 1.659   Downloaded rayon-core v1.12.1\n#12 1.663   Downloaded equivalent v1.0.2\n#12 1.664   Downloaded proc-macro2 v1.0.95\n#12 1.667   Downloaded itertools v0.14.0\n#12 1.675   Downloaded crossbeam-epoch v0.9.18\n#12 1.693 warning: profile package spec `miniz_oxide` in profile `dev` did not match any packages\n#12 1.694 warning: profile package spec `adler2` in profile `release` did not match any packages\n#12 1.694 warning: profile package spec `flate2` in profile `release` did not match any packages\n#12 1.694 warning: profile package spec `miniz_oxide` in profile `release` did not match any packages\n#12 1.712 error: failed to compile `cargo-deb v3.2.1`, intermediate artifacts can be found at `/tmp/cargo-installPGVVX0`.\n#12 1.712 To reuse those artifacts with a future compilation, set the environment variable `CARGO_TARGET_DIR` to that path.\n#12 1.712 \n#12 1.712 Caused by:\n#12 1.712   package `clap_lex v0.7.5` cannot be built because it requires rustc 1.74 or newer, while the currently active rustc version is 1.72.0\n#12 1.712   Try re-running cargo install with `--locked`\n#12 ERROR: process \"/bin/sh -c cargo install cargo-deb\" did not complete successfully: exit code: 101\n------\n > [ 8/15] RUN cargo install cargo-deb:\n1.693 warning: profile package spec `miniz_oxide` in profile `dev` did not match any packages\n1.694 warning: profile package spec `adler2` in profile `release` did not match any packages\n1.694 warning: profile package spec `flate2` in profile `release` did not match any packages\n1.694 warning: profile package spec `miniz_oxide` in profile `release` did not match any packages\n1.712 error: failed to compile `cargo-deb v3.2.1`, intermediate artifacts can be found at `/tmp/cargo-installPGVVX0`.\n1.712 To reuse those artifacts with a future compilation, set the environment variable `CARGO_TARGET_DIR` to that path.\n1.712 \n1.712 Caused by:\n1.712   package `clap_lex v0.7.5` cannot be built because it requires rustc 1.74 or newer, while the currently active rustc version is 1.72.0\n1.712   Try re-running cargo install with `--locked`\n------\nenvgym.dockerfile:67\n--------------------\n  65 |     \n  66 |     # Install cargo-deb for Debian packaging\n  67 | >>> RUN cargo install cargo-deb\n  68 |     \n  69 |     # Set up .cargo/config.toml for MUSL static linking (if not present in context, create minimal version)\n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c cargo install cargo-deb\" did not complete successfully: exit code: 101\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}