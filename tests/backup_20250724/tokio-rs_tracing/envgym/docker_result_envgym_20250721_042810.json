{
  "timestamp": "20250721_042810",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753072088",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.03kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/rust:1.65\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/11] FROM docker.io/library/rust:1.65@sha256:891bc3b252c43a1c2667083e3861f26e6f571dcc3bc98dcc151d6ff6edc62cb9\n#4 DONE 0.0s\n\n#5 [ 6/11] RUN cargo install cargo-hack --locked --verbose || (cat ~/.cargo/registry/index/*/*/config.json || true)\n#5 CACHED\n\n#6 [ 2/11] WORKDIR /home/cc/EnvGym/data/tokio-rs_tracing\n#6 CACHED\n\n#7 [ 5/11] RUN cargo install cargo-nextest --locked --verbose || (cat ~/.cargo/registry/index/*/*/config.json || true)\n#7 CACHED\n\n#8 [ 4/11] RUN rustup update &&     rustup component add clippy rustfmt\n#8 CACHED\n\n#9 [ 3/11] RUN apt-get update &&     apt-get install -y --no-install-recommends         git         pkg-config         libssl-dev         systemd         ca-certificates         clang         curl         build-essential         libclang-dev     && rm -rf /var/lib/apt/lists/*\n#9 CACHED\n\n#10 [ 7/11] RUN cargo install cargo-audit --locked --verbose || (cat ~/.cargo/registry/index/*/*/config.json || true)\n#10 CACHED\n\n#11 [ 8/11] RUN cargo install cargo-minimal-versions --locked --verbose || (cat ~/.cargo/registry/index/*/*/config.json || true)\n#11 0.231     Updating crates.io index\n#11 0.330  Downloading crates ...\n#11 0.368   Downloaded cargo-minimal-versions v0.1.31\n#11 0.428   Installing cargo-minimal-versions v0.1.31\n#11 0.617  Downloading crates ...\n#11 0.656   Downloaded semver v1.0.26\n#11 0.664   Downloaded toml_parser v1.0.0\n#11 0.669   Downloaded winnow v0.7.11\n#11 0.686   Downloaded toml_edit v0.23.0\n#11 0.748 error: failed to compile `cargo-minimal-versions v0.1.31`, intermediate artifacts can be found at `/tmp/cargo-installY8KBP0`\n#11 0.748 \n#11 0.748 Caused by:\n#11 0.748   package `nix v0.30.1` cannot be built because it requires rustc 1.69 or newer, while the currently active rustc version is 1.65.0\n#11 0.750 cat: '/root/.cargo/registry/index/*/*/config.json': No such file or directory\n#11 DONE 0.8s\n\n#12 [ 9/11] RUN cargo install inferno --locked --verbose\n#12 0.422     Updating crates.io index\n#12 0.527  Downloading crates ...\n#12 0.590   Downloaded inferno v0.12.3\n#12 0.650   Installing inferno v0.12.3\n#12 1.184  Downloading crates ...\n#12 1.227   Downloaded anstyle-query v1.1.2\n#12 1.229   Downloaded anstyle v1.0.10\n#12 1.231   Downloaded arrayvec v0.7.6\n#12 1.233   Downloaded anstream v0.6.18\n#12 1.236   Downloaded anstyle-parse v0.2.6\n#12 1.238   Downloaded parking_lot_core v0.9.10\n#12 1.241   Downloaded log v0.4.26\n#12 1.244   Downloaded ahash v0.8.11\n#12 1.247   Downloaded utf8parse v0.2.2\n#12 1.249   Downloaded strsim v0.10.0\n#12 1.250   Downloaded once_cell v1.21.1\n#12 1.253   Downloaded clap v4.4.18\n#12 1.264   Downloaded version_check v0.9.5\n#12 1.265   Downloaded rgb v0.8.50\n#12 1.268   Downloaded lock_api v0.4.12\n#12 1.270   Downloaded getrandom v0.2.15\n#12 1.274   Downloaded crossbeam-utils v0.8.21\n#12 1.277   Downloaded libc v0.2.171\n#12 1.313   Downloaded clap_derive v4.4.7\n#12 1.316   Downloaded colorchoice v1.0.3\n#12 1.317   Downloaded smallvec v1.14.0\n#12 1.320   Downloaded cfg-if v1.0.0\n#12 1.321   Downloaded is_terminal_polyfill v1.70.1\n#12 1.322   Downloaded scopeguard v1.2.0\n#12 1.323   Downloaded str_stack v0.1.0\n#12 1.324   Downloaded heck v0.4.1\n#12 1.326   Downloaded autocfg v1.4.0\n#12 1.328   Downloaded clap_lex v0.6.0\n#12 1.329   Downloaded memchr v2.7.4\n#12 1.336   Downloaded env_filter v0.1.3\n#12 1.338   Downloaded proc-macro2 v1.0.94\n#12 1.341   Downloaded env_logger v0.11.7\n#12 1.344   Downloaded dashmap v6.1.0\n#12 1.347   Downloaded bytemuck v1.22.0\n#12 1.351   Downloaded crossbeam-channel v0.5.15\n#12 1.356   Downloaded num-format v0.4.4\n#12 1.360   Downloaded indexmap v2.8.0\n#12 1.366   Downloaded hashbrown v0.14.5\n#12 1.373   Downloaded hashbrown v0.15.2\n#12 1.379   Downloaded clap_builder v4.4.18\n#12 1.388   Downloaded zerocopy v0.7.35\n#12 1.408   Downloaded syn v2.0.100\n#12 1.423   Downloaded quick-xml v0.37.2\n#12 1.488 error: failed to compile `inferno v0.12.3`, intermediate artifacts can be found at `/tmp/cargo-installBzIBIs`\n#12 1.488 \n#12 1.488 Caused by:\n#12 1.488   package `clap_builder v4.4.18` cannot be built because it requires rustc 1.70.0 or newer, while the currently active rustc version is 1.65.0\n#12 ERROR: process \"/bin/sh -c cargo install inferno --locked --verbose\" did not complete successfully: exit code: 101\n------\n > [ 9/11] RUN cargo install inferno --locked --verbose:\n1.366   Downloaded hashbrown v0.14.5\n1.373   Downloaded hashbrown v0.15.2\n1.379   Downloaded clap_builder v4.4.18\n1.388   Downloaded zerocopy v0.7.35\n1.408   Downloaded syn v2.0.100\n1.423   Downloaded quick-xml v0.37.2\n1.488 error: failed to compile `inferno v0.12.3`, intermediate artifacts can be found at `/tmp/cargo-installBzIBIs`\n1.488 \n1.488 Caused by:\n1.488   package `clap_builder v4.4.18` cannot be built because it requires rustc 1.70.0 or newer, while the currently active rustc version is 1.65.0\n------\nenvgym.dockerfile:25\n--------------------\n  23 |     RUN cargo install cargo-audit --locked --verbose || (cat ~/.cargo/registry/index/*/*/config.json || true)\n  24 |     RUN cargo install cargo-minimal-versions --locked --verbose || (cat ~/.cargo/registry/index/*/*/config.json || true)\n  25 | >>> RUN cargo install inferno --locked --verbose\n  26 |     RUN cargo install wasm-pack --locked --verbose\n  27 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c cargo install inferno --locked --verbose\" did not complete successfully: exit code: 101\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}