{
  "timestamp": "20250721_030143",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753066901",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.71kB done\n#1 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/17] FROM docker.io/library/ubuntu:22.04@sha256:1ec65b2719518e27d4d25f104d93f9fac60dc437f81452302406825c46fcc9cb\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 1.56MB 0.1s done\n#5 DONE 0.1s\n\n#6 [ 7/17] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable &&     . \"/home/cc/.cargo/env\" &&     rustup install stable &&     rustup install nightly &&     rustup toolchain install nightly-2025-01-25 &&     rustc --version\n#6 CACHED\n\n#7 [ 5/17] WORKDIR /home/cc/EnvGym/data/tokio-rs_tokio\n#7 CACHED\n\n#8 [ 3/17] RUN locale-gen en_US.UTF-8 &&     update-locale LANG=en_US.UTF-8\n#8 CACHED\n\n#9 [ 2/17] RUN apt-get update &&     apt-get install -y --no-install-recommends         build-essential         curl         git         ca-certificates         bash         sed         grep         netcat         locales         hunspell         hunspell-en-us         libhunspell-dev         pkg-config         sudo         libssl-dev         libclang-dev         clang     && rm -rf /var/lib/apt/lists/*\n#9 CACHED\n\n#10 [ 4/17] RUN useradd -ms /bin/bash cc &&     usermod -aG sudo cc &&     echo \"cc ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n#10 CACHED\n\n#11 [ 8/17] RUN . \"/home/cc/.cargo/env\" && cargo install cargo-deny\n#11 CACHED\n\n#12 [ 6/17] RUN chown -R cc:cc /home/cc\n#12 CACHED\n\n#13 [ 9/17] RUN . \"/home/cc/.cargo/env\" && cargo install cross\n#13 CACHED\n\n#14 [10/17] RUN cat /home/cc/.cargo/registry/*/cargo-spellcheck*/*/build.log || true\n#14 CACHED\n\n#15 [11/17] RUN . \"/home/cc/.cargo/env\" && cargo install cargo-spellcheck --locked --no-default-features --features \"hunspell\" --verbose || (cat /home/cc/.cargo/registry/*/cargo-spellcheck*/*/build.log || true; exit 1)\n#15 CACHED\n\n#16 [12/17] COPY . /home/cc/EnvGym/data/tokio-rs_tokio\n#16 DONE 0.2s\n\n#17 [13/17] RUN cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true\n#17 0.230 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n#17 DONE 0.2s\n\n#18 [14/17] RUN . \"/home/cc/.cargo/env\" && cargo --version && env\n#18 0.409 cargo 1.88.0 (873a06493 2025-05-10)\n#18 0.410 USER=cc\n#18 0.410 HOME=/home/cc\n#18 0.410 PATH=/home/cc/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n#18 0.410 LANG=en_US.UTF-8\n#18 0.410 DEBIAN_FRONTEND=noninteractive\n#18 0.410 LC_ALL=en_US.UTF-8\n#18 0.410 PWD=/home/cc/EnvGym/data/tokio-rs_tokio\n#18 DONE 0.4s\n\n#19 [15/17] RUN . \"/home/cc/.cargo/env\" && cargo install trybuild || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\n#19 0.458     Updating crates.io index\n#19 0.503  Downloading crates ...\n#19 0.578   Downloaded trybuild v1.0.106\n#19 0.612 error: there is nothing to install in `trybuild v1.0.106`, because it has no binaries\n#19 0.612 `cargo install` is only for installing programs, and can't be used with libraries.\n#19 0.612 To use a library crate, add it as a dependency to a Cargo project with `cargo add`.\n#19 0.615 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n#19 ERROR: process \"/bin/sh -c . \\\"$HOME/.cargo/env\\\" && cargo install trybuild || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\" did not complete successfully: exit code: 1\n------\n > [15/17] RUN . \"/home/cc/.cargo/env\" && cargo install trybuild || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1):\n0.458     Updating crates.io index\n0.503  Downloading crates ...\n0.578   Downloaded trybuild v1.0.106\n0.612 error: there is nothing to install in `trybuild v1.0.106`, because it has no binaries\n0.612 `cargo install` is only for installing programs, and can't be used with libraries.\n0.612 To use a library crate, add it as a dependency to a Cargo project with `cargo add`.\n0.615 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\nenvgym.dockerfile:71\n--------------------\n  69 |     \n  70 |     # Attempt to install trybuild, remove --locked and version pin, fallback diagnostics on failure\n  71 | >>> RUN . \"$HOME/.cargo/env\" && cargo install trybuild || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\n  72 |     \n  73 |     # Post-diagnostic: show trybuild build log again if exists\n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c . \\\"$HOME/.cargo/env\\\" && cargo install trybuild || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}