{
  "timestamp": "20250721_030044",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753066843",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.45kB done\n#1 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/15] FROM docker.io/library/ubuntu:22.04@sha256:1ec65b2719518e27d4d25f104d93f9fac60dc437f81452302406825c46fcc9cb\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 1.46MB 0.1s done\n#5 DONE 0.1s\n\n#6 [ 3/15] RUN locale-gen en_US.UTF-8 &&     update-locale LANG=en_US.UTF-8\n#6 CACHED\n\n#7 [10/15] RUN cat /home/cc/.cargo/registry/*/cargo-spellcheck*/*/build.log || true\n#7 CACHED\n\n#8 [ 4/15] RUN useradd -ms /bin/bash cc &&     usermod -aG sudo cc &&     echo \"cc ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n#8 CACHED\n\n#9 [ 7/15] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable &&     . \"/home/cc/.cargo/env\" &&     rustup install stable &&     rustup install nightly &&     rustup toolchain install nightly-2025-01-25 &&     rustc --version\n#9 CACHED\n\n#10 [ 9/15] RUN . \"/home/cc/.cargo/env\" && cargo install cross\n#10 CACHED\n\n#11 [ 5/15] WORKDIR /home/cc/EnvGym/data/tokio-rs_tokio\n#11 CACHED\n\n#12 [ 2/15] RUN apt-get update &&     apt-get install -y --no-install-recommends         build-essential         curl         git         ca-certificates         bash         sed         grep         netcat         locales         hunspell         hunspell-en-us         libhunspell-dev         pkg-config         sudo         libssl-dev         libclang-dev         clang     && rm -rf /var/lib/apt/lists/*\n#12 CACHED\n\n#13 [ 6/15] RUN chown -R cc:cc /home/cc\n#13 CACHED\n\n#14 [ 8/15] RUN . \"/home/cc/.cargo/env\" && cargo install cargo-deny\n#14 CACHED\n\n#15 [11/15] RUN . \"/home/cc/.cargo/env\" && cargo install cargo-spellcheck --locked --no-default-features --features \"hunspell\" --verbose || (cat /home/cc/.cargo/registry/*/cargo-spellcheck*/*/build.log || true; exit 1)\n#15 CACHED\n\n#16 [12/15] COPY . /home/cc/EnvGym/data/tokio-rs_tokio\n#16 DONE 0.2s\n\n#17 [13/15] RUN cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true\n#17 0.200 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n#17 DONE 0.2s\n\n#18 [14/15] RUN . \"/home/cc/.cargo/env\" && cargo install trybuild --locked || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\n#18 0.533     Updating crates.io index\n#18 0.620  Downloading crates ...\n#18 0.713   Downloaded trybuild v1.0.106\n#18 0.746 error: there is nothing to install in `trybuild v1.0.106`, because it has no binaries\n#18 0.746 `cargo install` is only for installing programs, and can't be used with libraries.\n#18 0.746 To use a library crate, add it as a dependency to a Cargo project with `cargo add`.\n#18 0.750 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n#18 ERROR: process \"/bin/sh -c . \\\"$HOME/.cargo/env\\\" && cargo install trybuild --locked || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\" did not complete successfully: exit code: 1\n------\n > [14/15] RUN . \"/home/cc/.cargo/env\" && cargo install trybuild --locked || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1):\n0.533     Updating crates.io index\n0.620  Downloading crates ...\n0.713   Downloaded trybuild v1.0.106\n0.746 error: there is nothing to install in `trybuild v1.0.106`, because it has no binaries\n0.746 `cargo install` is only for installing programs, and can't be used with libraries.\n0.746 To use a library crate, add it as a dependency to a Cargo project with `cargo add`.\n0.750 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\nenvgym.dockerfile:67\n--------------------\n  65 |     RUN cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true\n  66 |     # Attempt to install trybuild with --locked, and fallback diagnostics on failure\n  67 | >>> RUN . \"$HOME/.cargo/env\" && cargo install trybuild --locked || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\n  68 |     \n  69 |     # 6. Set up workspace root as default\n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c . \\\"$HOME/.cargo/env\\\" && cargo install trybuild --locked || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}