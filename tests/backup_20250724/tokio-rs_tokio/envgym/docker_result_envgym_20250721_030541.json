{
  "timestamp": "20250721_030541",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753067133",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.05kB done\n#1 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/19] FROM docker.io/library/ubuntu:22.04@sha256:1ec65b2719518e27d4d25f104d93f9fac60dc437f81452302406825c46fcc9cb\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 3.34MB 0.1s done\n#5 DONE 0.1s\n\n#6 [ 4/19] RUN useradd -ms /bin/bash cc &&     usermod -aG sudo cc &&     echo \"cc ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n#6 CACHED\n\n#7 [10/19] RUN cat /home/cc/.cargo/registry/*/cargo-spellcheck*/*/build.log || true\n#7 CACHED\n\n#8 [ 5/19] WORKDIR /home/cc/EnvGym/data/tokio-rs_tokio\n#8 CACHED\n\n#9 [ 6/19] RUN chown -R cc:cc /home/cc\n#9 CACHED\n\n#10 [ 3/19] RUN locale-gen en_US.UTF-8 &&     update-locale LANG=en_US.UTF-8\n#10 CACHED\n\n#11 [ 9/19] RUN . \"/home/cc/.cargo/env\" && cargo install cross\n#11 CACHED\n\n#12 [ 7/19] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable &&     . \"/home/cc/.cargo/env\" &&     rustup install stable &&     rustup install nightly &&     rustup toolchain install nightly-2025-01-25 &&     rustc --version\n#12 CACHED\n\n#13 [ 8/19] RUN . \"/home/cc/.cargo/env\" && cargo install cargo-deny\n#13 CACHED\n\n#14 [ 2/19] RUN apt-get update &&     apt-get install -y --no-install-recommends         build-essential         curl         git         ca-certificates         bash         sed         grep         netcat         locales         hunspell         hunspell-en-us         libhunspell-dev         pkg-config         sudo         libssl-dev         libclang-dev         clang         python3         python3-pip     && rm -rf /var/lib/apt/lists/*\n#14 CACHED\n\n#15 [11/19] RUN . \"/home/cc/.cargo/env\" && cargo install cargo-spellcheck --locked --no-default-features --features \"hunspell\" --verbose || (cat /home/cc/.cargo/registry/*/cargo-spellcheck*/*/build.log || true; exit 1)\n#15 CACHED\n\n#16 [12/19] COPY . /home/cc/EnvGym/data/tokio-rs_tokio\n#16 DONE 0.3s\n\n#17 [13/19] RUN cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true\n#17 0.199 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n#17 DONE 0.2s\n\n#18 [14/19] RUN . \"/home/cc/.cargo/env\" && cargo --version && env\n#18 0.418 cargo 1.88.0 (873a06493 2025-05-10)\n#18 0.419 USER=cc\n#18 0.419 HOME=/home/cc\n#18 0.419 PATH=/home/cc/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n#18 0.419 LANG=en_US.UTF-8\n#18 0.419 DEBIAN_FRONTEND=noninteractive\n#18 0.419 LC_ALL=en_US.UTF-8\n#18 0.419 PWD=/home/cc/EnvGym/data/tokio-rs_tokio\n#18 DONE 0.4s\n\n#19 [15/19] RUN . \"/home/cc/.cargo/env\" && cargo fetch\n#19 0.546     Updating crates.io index\n#19 1.514      Locking 216 packages to latest compatible versions\n#19 1.549       Adding criterion v0.5.1 (available: v0.6.0)\n#19 1.560       Adding http v0.2.12 (available: v1.3.1)\n#19 1.571       Adding nix v0.29.0 (available: v0.30.1)\n#19 1.690       Adding windows-sys v0.59.0 (available: v0.60.2)\n#19 1.722  Downloading crates ...\n#19 1.884   Downloaded doc-comment v0.3.3\n#19 1.887   Downloaded toml_parser v1.0.1\n#19 1.892   Downloaded oorandom v11.1.5\n#19 1.894   Downloaded toml_datetime v0.7.0\n#19 1.897   Downloaded serde_spanned v1.0.0\n#19 1.900   Downloaded anes v0.1.6\n#19 1.905   Downloaded crunchy v0.2.4\n#19 1.907   Downloaded criterion-plot v0.5.0\n#19 1.910   Downloaded target-triple v0.1.4\n#19 1.911   Downloaded criterion v0.5.1\n#19 1.922   Downloaded ciborium-io v0.2.2\n#19 1.923   Downloaded ciborium v0.2.2\n#19 1.927   Downloaded is-terminal v0.4.16\n#19 1.928   Downloaded tinytemplate v1.2.1\n#19 1.931   Downloaded windows-targets v0.52.6\n#19 1.932   Downloaded half v2.6.0\n#19 1.936   Downloaded generator v0.8.5\n#19 1.940   Downloaded plotters v0.3.7\n#19 1.950   Downloaded windows-interface v0.59.1\n#19 1.951   Downloaded tracing-attributes v0.1.30\n#19 1.954   Downloaded unarray v0.1.4\n#19 1.955   Downloaded termtree v0.5.1\n#19 1.957   Downloaded toml v0.9.2\n#19 1.962   Downloaded ciborium-ll v0.2.2\n#19 1.964   Downloaded predicates v3.1.3\n#19 1.967   Downloaded wasm-bindgen-futures v0.4.50\n#19 1.969   Downloaded cast v0.3.0\n#19 1.970   Downloaded plotters-backend v0.3.7\n#19 1.972   Downloaded bit-vec v0.8.0\n#19 1.974   Downloaded plotters-svg v0.3.7\n#19 1.975   Downloaded windows-threading v0.1.0\n#19 1.976   Downloaded wasm-bindgen-shared v0.2.100\n#19 1.978   Downloaded diatomic-waker v0.2.3\n#19 1.980   Downloaded futures-buffered v0.2.11\n#19 1.983   Downloaded downcast v0.11.0\n#19 1.984   Downloaded windows-implement v0.60.0\n#19 1.986   Downloaded wasm-bindgen-backend v0.2.100\n#19 1.988   Downloaded tracing-log v0.2.0\n#19 1.989   Downloaded windows-strings v0.4.2\n#19 1.991   Downloaded async-stream-impl v0.3.6\n#19 1.992   Downloaded wasm-bindgen-macro-support v0.2.100\n#19 1.994   Downloaded windows-numerics v0.2.0\n#19 1.995   Downloaded mockall v0.13.1\n#19 1.997   Downloaded nu-ansi-term v0.46.0\n#19 1.999   Downloaded matchers v0.1.0\n#19 2.001   Downloaded pin-project v1.1.10\n#19 2.013   Downloaded windows-result v0.3.4\n#19 2.015   Downloaded windows-core v0.61.2\n#19 2.018   Downloaded num_cpus v1.17.0\n#19 2.021   Downloaded futures-test v0.3.31\n#19 2.023   Downloaded hermit-abi v0.5.2\n#19 2.025   Downloaded async-stream v0.3.6\n#19 2.027   Downloaded spin v0.9.8\n#19 2.030   Downloaded rusty-fork v0.3.0\n#19 2.031   Downloaded wasm-bindgen-macro v0.2.100\n#19 2.033   Downloaded cordyceps v0.3.4\n#19 2.036   Downloaded pin-project-internal v1.1.10\n#19 2.038   Downloaded js-sys v0.3.77\n#19 2.040   Downloaded mockall_derive v0.13.1\n#19 2.042   Downloaded socket2 v0.6.0\n#19 2.045   Downloaded loom v0.7.2\n#19 2.052   Downloaded r-efi v5.3.0\n#19 2.057   Downloaded futures-concurrency v7.6.3\n#19 2.065   Downloaded io-uring v0.7.8\n#19 2.070   Downloaded proptest v1.7.0\n#19 2.080   Downloaded regex-automata v0.1.10\n#19 2.086   Downloaded bumpalo v3.19.0\n#19 2.089   Downloaded wasi v0.14.2+wasi-0.2.4\n#19 2.096   Downloaded zerocopy-derive v0.8.26\n#19 2.103   Downloaded minicov v0.3.7\n#19 2.105   Downloaded wasm-bindgen v0.2.100\n#19 2.108   Downloaded rustversion v1.0.21\n#19 2.111   Downloaded tracing-mock v0.1.0-beta.1\n#19 2.114   Downloaded windows-future v0.2.1\n#19 2.115   Downloaded wasi v0.11.1+wasi-snapshot-preview1\n#19 2.117   Downloaded wasm-bindgen-test-macro v0.3.50\n#19 2.118   Downloaded wasm-bindgen-test v0.3.50\n#19 2.120   Downloaded parking v2.2.1\n#19 2.121   Downloaded windows-collections v0.2.0\n#19 2.122   Downloaded mio-aio v1.0.0\n#19 2.123   Downloaded fragile v2.0.1\n#19 2.125   Downloaded predicates-tree v1.0.12\n#19 2.126   Downloaded winapi-util v0.1.9\n#19 2.128   Downloaded windows_x86_64_gnullvm v0.52.6\n#19 2.139   Downloaded nix v0.29.0\n#19 2.151   Downloaded futures-lite v2.6.0\n#19 2.153   Downloaded overload v0.1.1\n#19 2.154   Downloaded bit-set v0.8.0\n#19 2.156   Downloaded rand_xorshift v0.4.0\n#19 2.157   Downloaded quick-error v1.2.3\n#19 2.158   Downloaded windows-link v0.1.3\n#19 2.159   Downloaded windows_i686_msvc v0.52.6\n#19 2.178   Downloaded valuable v0.1.1\n#19 2.180   Downloaded wait-timeout v0.2.1\n#19 2.181   Downloaded scoped-tls v1.0.1\n#19 2.182   Downloaded thread_local v1.1.9\n#19 2.184   Downloaded predicates-core v1.0.9\n#19 2.185   Downloaded redox_syscall v0.5.14\n#19 2.187   Downloaded wit-bindgen-rt v0.39.0\n#19 2.189   Downloaded windows-targets v0.53.2\n#19 2.190   Downloaded trybuild v1.0.106\n#19 2.194   Downloaded toml_writer v1.0.2\n#19 2.268   Downloaded windows_aarch64_gnullvm v0.52.6\n#19 2.290   Downloaded windows_i686_gnullvm v0.52.6\n#19 2.420   Downloaded web-sys v0.3.77\n#19 2.644   Downloaded windows_x86_64_gnu v0.52.6\n#19 2.690   Downloaded windows_x86_64_gnullvm v0.53.0\n#19 2.728   Downloaded windows_aarch64_msvc v0.53.0\n#19 2.751   Downloaded windows_aarch64_msvc v0.52.6\n#19 2.771   Downloaded windows_x86_64_msvc v0.52.6\n#19 2.794   Downloaded windows_i686_gnullvm v0.53.0\n#19 2.831   Downloaded windows_aarch64_gnullvm v0.53.0\n#19 2.855   Downloaded windows_x86_64_msvc v0.53.0\n#19 2.880   Downloaded windows_i686_gnu v0.52.6\n#19 2.932   Downloaded windows_x86_64_gnu v0.53.0\n#19 2.980   Downloaded windows_i686_msvc v0.53.0\n#19 3.029   Downloaded windows_i686_gnu v0.53.0\n#19 3.171   Downloaded winapi v0.3.9\n#19 3.513   Downloaded windows-sys v0.59.0\n#19 3.707   Downloaded windows-sys v0.60.2\n#19 3.902   Downloaded winapi-x86_64-pc-windows-gnu v0.4.0\n#19 4.053   Downloaded winapi-i686-pc-windows-gnu v0.4.0\n#19 4.530   Downloaded windows v0.61.3\n#19 DONE 6.1s\n\n#20 [16/19] RUN ls -l /home/cc/EnvGym/data/tokio-rs_tokio/Cargo.toml && cat /home/cc/EnvGym/data/tokio-rs_tokio/Cargo.toml\n#20 0.216 -rw-rw-r-- 1 root root 680 Jul 20 00:49 /home/cc/EnvGym/data/tokio-rs_tokio/Cargo.toml\n#20 0.217 [workspace]\n#20 0.217 resolver = \"2\"\n#20 0.217 members = [\n#20 0.217   \"tokio\",\n#20 0.217   \"tokio-macros\",\n#20 0.217   \"tokio-test\",\n#20 0.217   \"tokio-stream\",\n#20 0.217   \"tokio-util\",\n#20 0.217 \n#20 0.217   # Internal\n#20 0.217   \"benches\",\n#20 0.217   \"examples\",\n#20 0.217   \"stress-test\",\n#20 0.217   \"tests-build\",\n#20 0.217   \"tests-integration\",\n#20 0.217 ]\n#20 0.217 \n#20 0.217 [workspace.metadata.spellcheck]\n#20 0.217 config = \"spellcheck.toml\"\n#20 0.217 \n#20 0.217 [workspace.lints.rust]\n#20 0.217 unexpected_cfgs = { level = \"warn\", check-cfg = [\n#20 0.217   'cfg(fuzzing)',\n#20 0.217   'cfg(loom)',\n#20 0.217   'cfg(mio_unsupported_force_poll_poll)',\n#20 0.217   'cfg(tokio_allow_from_blocking_fd)',\n#20 0.217   'cfg(tokio_internal_mt_counters)',\n#20 0.217   'cfg(tokio_no_parking_lot)',\n#20 0.217   'cfg(tokio_no_tuning_tests)',\n#20 0.217   'cfg(tokio_taskdump)',\n#20 0.217   'cfg(tokio_unstable)',\n#20 0.217   'cfg(tokio_uring)',\n#20 0.217   'cfg(target_os, values(\"cygwin\"))',\n#20 0.217 ] }\n#20 DONE 0.2s\n\n#21 [17/19] RUN . \"/home/cc/.cargo/env\" && cargo install trybuild --verbose || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\n#21 0.480     Updating crates.io index\n#21 0.587 error: there is nothing to install in `trybuild v1.0.106`, because it has no binaries\n#21 0.587 `cargo install` is only for installing programs, and can't be used with libraries.\n#21 0.587 To use a library crate, add it as a dependency to a Cargo project with `cargo add`.\n#21 0.590 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n#21 ERROR: process \"/bin/sh -c . \\\"$HOME/.cargo/env\\\" && cargo install trybuild --verbose || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\" did not complete successfully: exit code: 1\n------\n > [17/19] RUN . \"/home/cc/.cargo/env\" && cargo install trybuild --verbose || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1):\n0.480     Updating crates.io index\n0.587 error: there is nothing to install in `trybuild v1.0.106`, because it has no binaries\n0.587 `cargo install` is only for installing programs, and can't be used with libraries.\n0.587 To use a library crate, add it as a dependency to a Cargo project with `cargo add`.\n0.590 cat: '/home/cc/.cargo/registry/*/trybuild*/*/build.log': No such file or directory\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\nenvgym.dockerfile:79\n--------------------\n  77 |     \n  78 |     # Attempt to install trybuild with increased verbosity, fallback diagnostics on failure\n  79 | >>> RUN . \"$HOME/.cargo/env\" && cargo install trybuild --verbose || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\n  80 |     \n  81 |     # Post-diagnostic: show trybuild build log again if exists\n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c . \\\"$HOME/.cargo/env\\\" && cargo install trybuild --verbose || (cat /home/cc/.cargo/registry/*/trybuild*/*/build.log || true; exit 1)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}