{
  "timestamp": "20250721_104944",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753094984",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.70kB done\n#1 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:24.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/16] FROM docker.io/library/ubuntu:24.04@sha256:a08e551cb33850e4740772b38217fc1796a66da2506d312abe51acda354ff061\n#4 DONE 0.0s\n\n#5 [ 6/16] RUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen &&     locale-gen &&     update-locale LANG=en_US.UTF-8\n#5 CACHED\n\n#6 [ 2/16] RUN apt-get update &&     apt-get install -y --no-install-recommends       ca-certificates       tzdata     && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [ 3/16] RUN ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime && dpkg-reconfigure -f noninteractive tzdata\n#7 CACHED\n\n#8 [ 4/16] RUN apt-get update &&     apt-get install -y --no-install-recommends       clang       curl       g++       git       make       python3       python3-pip       python3-venv       build-essential       cmake       tar       xz-utils       libssl3       libcurl4       zlib1g       libzstd1       liblzma5       libgssapi-krb5-2       libkrb5-3       lsb-release       lldb       bash       coreutils       file       gnupg       wget       locales       jq     && rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [ 5/16] RUN apt-get update &&     apt-get install -y --no-install-recommends libc6\n#9 CACHED\n\n#10 [ 7/16] RUN echo \"=== System diagnostics ===\" &&     lsb_release -a || true &&     uname -a &&     date &&     echo \"ca-certificates version:\" && apt-cache policy ca-certificates &&     echo \"curl version:\" && curl --version &&     echo \"clang version:\" && clang --version &&     echo \"g++ version:\" && g++ --version &&     echo \"tar version:\" && tar --version &&     echo \"xz-utils version:\" && xz --version &&     echo \"bash version:\" && bash --version\n#10 CACHED\n\n#11 [internal] load build context\n#11 transferring context: 1.85MB 0.1s done\n#11 DONE 0.1s\n\n#12 [ 8/16] RUN set -euxo pipefail;     echo \"==== Downloading pinned ponyup-init.sh ====\";     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/94adbb1b642e2a6b7c9c4eadc45e5c9e775b8115/ponyup-init.sh;     echo \"==== ponyup-init.sh first 40 lines ====\"; head -40 /tmp/ponyup-init.sh;     echo \"==== Checking file type of ponyup-init.sh ====\"; file /tmp/ponyup-init.sh;     chmod +x /tmp/ponyup-init.sh;     echo \"==== Checking if bash, curl, and coreutils are present ====\";     bash --version;     curl --version;     ls --version;     file --version;     wget --version;     mkdir -p /root/.local/share/ponyup;     ls -ld /root/.local/share/ponyup;     export HOME=\"/root\"; export USER=\"root\";     echo \"==== Running ponyup-init.sh (full output below) ====\";     ( /bin/bash -l /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ) || (cat /tmp/ponyup-install.log; exit 1);     cat /tmp/ponyup-install.log || true;     echo \"==== Checking for ponyup binary ====\";     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then       echo \"ponyup binary not found after install (install failed or path changed)\";       ls -lR /root/.local/share/ponyup || true;       exit 2;     fi\n#12 0.198 /bin/sh: 1: set: Illegal option -o pipefail\n#12 ERROR: process \"/bin/sh -c set -euxo pipefail;     echo \\\"==== Downloading pinned ponyup-init.sh ====\\\";     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/${PONYUP_INIT_COMMIT}/ponyup-init.sh;     echo \\\"==== ponyup-init.sh first 40 lines ====\\\"; head -40 /tmp/ponyup-init.sh;     echo \\\"==== Checking file type of ponyup-init.sh ====\\\"; file /tmp/ponyup-init.sh;     chmod +x /tmp/ponyup-init.sh;     echo \\\"==== Checking if bash, curl, and coreutils are present ====\\\";     bash --version;     curl --version;     ls --version;     file --version;     wget --version;     mkdir -p /root/.local/share/ponyup;     ls -ld /root/.local/share/ponyup;     export HOME=\\\"/root\\\"; export USER=\\\"root\\\";     echo \\\"==== Running ponyup-init.sh (full output below) ====\\\";     ( /bin/bash -l /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ) || (cat /tmp/ponyup-install.log; exit 1);     cat /tmp/ponyup-install.log || true;     echo \\\"==== Checking for ponyup binary ====\\\";     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then       echo \\\"ponyup binary not found after install (install failed or path changed)\\\";       ls -lR /root/.local/share/ponyup || true;       exit 2;     fi\" did not complete successfully: exit code: 2\n------\n > [ 8/16] RUN set -euxo pipefail;     echo \"==== Downloading pinned ponyup-init.sh ====\";     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/94adbb1b642e2a6b7c9c4eadc45e5c9e775b8115/ponyup-init.sh;     echo \"==== ponyup-init.sh first 40 lines ====\"; head -40 /tmp/ponyup-init.sh;     echo \"==== Checking file type of ponyup-init.sh ====\"; file /tmp/ponyup-init.sh;     chmod +x /tmp/ponyup-init.sh;     echo \"==== Checking if bash, curl, and coreutils are present ====\";     bash --version;     curl --version;     ls --version;     file --version;     wget --version;     mkdir -p /root/.local/share/ponyup;     ls -ld /root/.local/share/ponyup;     export HOME=\"/root\"; export USER=\"root\";     echo \"==== Running ponyup-init.sh (full output below) ====\";     ( /bin/bash -l /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ) || (cat /tmp/ponyup-install.log; exit 1);     cat /tmp/ponyup-install.log || true;     echo \"==== Checking for ponyup binary ====\";     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then       echo \"ponyup binary not found after install (install failed or path changed)\";       ls -lR /root/.local/share/ponyup || true;       exit 2;     fi:\n0.198 /bin/sh: 1: set: Illegal option -o pipefail\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\nenvgym.dockerfile:72\n--------------------\n  71 |     # --- DEBUGGING: Capture install log and print it on build failure ---\n  72 | >>> RUN set -euxo pipefail; \\\n  73 | >>>     echo \"==== Downloading pinned ponyup-init.sh ====\"; \\\n  74 | >>>     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/${PONYUP_INIT_COMMIT}/ponyup-init.sh; \\\n  75 | >>>     echo \"==== ponyup-init.sh first 40 lines ====\"; head -40 /tmp/ponyup-init.sh; \\\n  76 | >>>     echo \"==== Checking file type of ponyup-init.sh ====\"; file /tmp/ponyup-init.sh; \\\n  77 | >>>     chmod +x /tmp/ponyup-init.sh; \\\n  78 | >>>     echo \"==== Checking if bash, curl, and coreutils are present ====\"; \\\n  79 | >>>     bash --version; \\\n  80 | >>>     curl --version; \\\n  81 | >>>     ls --version; \\\n  82 | >>>     file --version; \\\n  83 | >>>     wget --version; \\\n  84 | >>>     mkdir -p /root/.local/share/ponyup; \\\n  85 | >>>     ls -ld /root/.local/share/ponyup; \\\n  86 | >>>     export HOME=\"/root\"; export USER=\"root\"; \\\n  87 | >>>     echo \"==== Running ponyup-init.sh (full output below) ====\"; \\\n  88 | >>>     ( /bin/bash -l /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ) || (cat /tmp/ponyup-install.log; exit 1); \\\n  89 | >>>     cat /tmp/ponyup-install.log || true; \\\n  90 | >>>     echo \"==== Checking for ponyup binary ====\"; \\\n  91 | >>>     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then \\\n  92 | >>>       echo \"ponyup binary not found after install (install failed or path changed)\"; \\\n  93 | >>>       ls -lR /root/.local/share/ponyup || true; \\\n  94 | >>>       exit 2; \\\n  95 | >>>     fi\n  96 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c set -euxo pipefail;     echo \\\"==== Downloading pinned ponyup-init.sh ====\\\";     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/${PONYUP_INIT_COMMIT}/ponyup-init.sh;     echo \\\"==== ponyup-init.sh first 40 lines ====\\\"; head -40 /tmp/ponyup-init.sh;     echo \\\"==== Checking file type of ponyup-init.sh ====\\\"; file /tmp/ponyup-init.sh;     chmod +x /tmp/ponyup-init.sh;     echo \\\"==== Checking if bash, curl, and coreutils are present ====\\\";     bash --version;     curl --version;     ls --version;     file --version;     wget --version;     mkdir -p /root/.local/share/ponyup;     ls -ld /root/.local/share/ponyup;     export HOME=\\\"/root\\\"; export USER=\\\"root\\\";     echo \\\"==== Running ponyup-init.sh (full output below) ====\\\";     ( /bin/bash -l /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ) || (cat /tmp/ponyup-install.log; exit 1);     cat /tmp/ponyup-install.log || true;     echo \\\"==== Checking for ponyup binary ====\\\";     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then       echo \\\"ponyup binary not found after install (install failed or path changed)\\\";       ls -lR /root/.local/share/ponyup || true;       exit 2;     fi\" did not complete successfully: exit code: 2\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}