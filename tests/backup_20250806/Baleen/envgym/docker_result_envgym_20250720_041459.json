{
  "timestamp": "20250720_041459",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1752984897",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.94kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/python:3.11-slim\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/13] FROM docker.io/library/python:3.11-slim@sha256:139020233cc412efe4c8135b0efe1c7569dc8b28ddd88bddb109b764f8977e30\n#4 DONE 0.0s\n\n#5 [ 2/13] RUN apt-get update &&     apt-get install -y --no-install-recommends         git         curl         ca-certificates         bash         build-essential         wget         bzip2         libglib2.0-0         libxext6         libsm6         libxrender1         locales         tzdata &&     rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [ 3/13] RUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen &&     locale-gen\n#6 CACHED\n\n#7 [ 4/13] RUN mkdir -p /home/cc/EnvGym/data/Baleen\n#7 CACHED\n\n#8 [ 5/13] WORKDIR /home/cc/EnvGym/data/Baleen\n#8 CACHED\n\n#9 [internal] load build context\n#9 transferring context: 221.27kB 0.0s done\n#9 DONE 0.0s\n\n#10 [ 6/13] RUN curl -Ls https://micro.mamba.pm/install.sh | bash -x -s -- -b -p /opt/conda\n#10 0.781 + set -eu\n#10 0.782 ++ ps -o comm 1\n#10 0.782 ++ tail -1\n#10 0.782 bash: line 6: ps: command not found\n#10 0.783 + parent=\n#10 0.783 + parent=\n#10 0.784 + case \"$parent\" in\n#10 0.784 + shell=bash\n#10 0.784 + '[' -t 0 ']'\n#10 0.784 + BIN_FOLDER=/root/.local/bin\n#10 0.784 + INIT_YES=yes\n#10 0.784 + CONDA_FORGE_YES=yes\n#10 0.784 + case \"$INIT_YES\" in\n#10 0.784 + '[' -t 0 ']'\n#10 0.784 + PREFIX_LOCATION=/root/micromamba\n#10 0.784 + case \"$(uname)\" in\n#10 0.785 ++ uname\n#10 0.786 + PLATFORM=linux\n#10 0.786 ++ uname -m\n#10 0.787 + ARCH=x86_64\n#10 0.787 + case \"$ARCH\" in\n#10 0.787 + ARCH=64\n#10 0.787 + case \"$PLATFORM-$ARCH\" in\n#10 0.788 + '[' '' = '' ']'\n#10 0.788 + RELEASE_URL=https://github.com/mamba-org/micromamba-releases/releases/latest/download/micromamba-linux-64\n#10 0.788 + mkdir -p /root/.local/bin\n#10 0.790 + hash curl\n#10 0.790 + curl https://github.com/mamba-org/micromamba-releases/releases/latest/download/micromamba-linux-64 -o /root/.local/bin/micromamba -fsSL --compressed\n#10 1.094 + chmod +x /root/.local/bin/micromamba\n#10 1.097 + case \"$INIT_YES\" in\n#10 1.097 + case $(\"${BIN_FOLDER}/micromamba\" --version) in\n#10 1.097 ++ /root/.local/bin/micromamba --version\n#10 1.107 + shell_arg=--shell\n#10 1.107 + prefix_arg=--root-prefix\n#10 1.107 + /root/.local/bin/micromamba shell init --shell bash --root-prefix /root/micromamba\n#10 1.118 Running `shell init`, which:\n#10 1.118  - modifies RC file: \"/root/.bashrc\"\n#10 1.118  - generates config for root prefix: \u001b[1m\"/root/micromamba\"\u001b[0m\n#10 1.118  - sets mamba executable to: \u001b[1m\"/root/.local/bin/micromamba\"\u001b[0m\n#10 1.118 The following has been added in your \"/root/.bashrc\" file\n#10 1.118 \n#10 1.118 # >>> mamba initialize >>>\n#10 1.118 # !! Contents within this block are managed by 'micromamba shell init' !!\n#10 1.118 export MAMBA_EXE='/root/.local/bin/micromamba';\n#10 1.118 export MAMBA_ROOT_PREFIX='/root/micromamba';\n#10 1.118 __mamba_setup=\"$(\"$MAMBA_EXE\" shell hook --shell bash --root-prefix \"$MAMBA_ROOT_PREFIX\" 2> /dev/null)\"\n#10 1.118 if [ $? -eq 0 ]; then\n#10 1.118     eval \"$__mamba_setup\"\n#10 1.118 else\n#10 1.118     alias micromamba=\"$MAMBA_EXE\"  # Fallback on help from micromamba activate\n#10 1.118 fi\n#10 1.118 unset __mamba_setup\n#10 1.118 # <<< mamba initialize <<<\n#10 1.118 \n#10 1.119 + echo 'Please restart your shell to activate micromamba or run the following:\\n'\n#10 1.119 + echo '  source ~/.bashrc (or ~/.zshrc, ~/.xonshrc, ~/.config/fish/config.fish, ...)'\n#10 1.119 Please restart your shell to activate micromamba or run the following:\\n\n#10 1.119   source ~/.bashrc (or ~/.zshrc, ~/.xonshrc, ~/.config/fish/config.fish, ...)\n#10 1.120 + case \"$CONDA_FORGE_YES\" in\n#10 1.120 + /root/.local/bin/micromamba config append channels conda-forge\n#10 1.130 + /root/.local/bin/micromamba config append channels nodefaults\n#10 1.140 + /root/.local/bin/micromamba config set channel_priority strict\n#10 DONE 1.2s\n\n#11 [ 7/13] RUN bash -c \"source ~/.bashrc && /opt/conda/bin/micromamba shell init -s bash -p /opt/conda\"\n#11 0.384 bash: line 1: /opt/conda/bin/micromamba: No such file or directory\n#11 ERROR: process \"/bin/sh -c bash -c \\\"source ~/.bashrc && /opt/conda/bin/micromamba shell init -s bash -p /opt/conda\\\"\" did not complete successfully: exit code: 127\n------\n > [ 7/13] RUN bash -c \"source ~/.bashrc && /opt/conda/bin/micromamba shell init -s bash -p /opt/conda\":\n0.384 bash: line 1: /opt/conda/bin/micromamba: No such file or directory\n------\nenvgym.dockerfile:36\n--------------------\n  34 |     ENV MAMBA_ROOT_PREFIX=/opt/conda\n  35 |     RUN curl -Ls https://micro.mamba.pm/install.sh | bash -x -s -- -b -p /opt/conda\n  36 | >>> RUN bash -c \"source ~/.bashrc && /opt/conda/bin/micromamba shell init -s bash -p /opt/conda\"\n  37 |     ENV PATH=\"/opt/conda/bin:${PATH}\"\n  38 |     RUN ls -al /opt/conda && ls -al /opt/conda/bin || (cat /opt/conda/.messages.txt || true)\n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c bash -c \\\"source ~/.bashrc && /opt/conda/bin/micromamba shell init -s bash -p /opt/conda\\\"\" did not complete successfully: exit code: 127\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}