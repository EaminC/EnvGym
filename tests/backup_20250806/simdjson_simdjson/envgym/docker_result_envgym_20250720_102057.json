{
  "timestamp": "20250720_102057",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753006795",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 4.14kB done\n#1 DONE 0.0s\n\n#2 resolve image config for docker-image://docker.io/docker/dockerfile:1\n#2 DONE 0.1s\n\n#3 docker-image://docker.io/docker/dockerfile:1@sha256:9857836c9ee4268391bb5b09f9f157f3c91bb15821bb77969642813b0d00518d\n#3 CACHED\n\n#4 [internal] load metadata for docker.io/library/debian:12\n#4 DONE 0.1s\n\n#5 [internal] load .dockerignore\n#5 transferring context: 185B done\n#5 DONE 0.0s\n\n#6 [ 1/19] FROM docker.io/library/debian:12@sha256:d42b86d7e24d78a33edcf1ef4f65a20e34acb1e1abd53cabc3f7cdf769fc4082\n#6 DONE 0.0s\n\n#7 [ 8/19] RUN echo \"PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" && env &&     cmake --version &&     ninja --version &&     gcc --version &&     g++ --version &&     clang --version &&     python3 --version &&     ldd --version\n#7 CACHED\n\n#8 [ 3/19] RUN CMAKE_VERSION=3.27.9     && wget -qO- https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.tar.gz | tar --strip-components=1 -xz -C /usr/local\n#8 CACHED\n\n#9 [ 6/19] RUN cd /tmp/clang-p2996 && git submodule update --init --recursive\n#9 CACHED\n\n#10 [ 2/19] RUN apt-get update && apt-get install -y --no-install-recommends     build-essential     gcc     g++     clang     clang-tidy     clang-format     lldb     lld     make     cmake     ninja-build     doxygen     git     wget     curl     ca-certificates     gnupg     zlib1g     zlib1g-dev     unzip     subversion     python3     python3-dev     python3-pip     sudo     binutils     linux-perf     vim     zsh     valgrind     lcov     gcovr     pkg-config     libcurl4-openssl-dev     rust-all     nodejs     npm     libxml2-dev     libedit-dev     libncurses5-dev     libncursesw5-dev     swig     libffi-dev     libssl-dev     libtool     python3-setuptools     libsqlite3-dev     uuid-dev     libzstd-dev     libtinfo-dev     liblzma-dev     libpython3-dev     libgmp-dev     libexpat1-dev     libstdc++-12-dev     lib32z1     libbz2-dev     libz-dev     libreadline-dev     gcc-multilib     g++-multilib     libxml2-utils     libyaml-dev     libmpfr-dev     libmpc-dev     libisl-dev     ninja-build     && rm -rf /var/lib/apt/lists/*\n#10 CACHED\n\n#11 [ 4/19] WORKDIR /workspace\n#11 CACHED\n\n#12 [ 5/19] RUN git clone --depth 1 --branch p2996 https://github.com/bloomberg/clang-p2996.git /tmp/clang-p2996\n#12 CACHED\n\n#13 [ 7/19] RUN mkdir /tmp/clang-p2996/build\n#13 CACHED\n\n#14 [ 9/19] RUN cd /tmp/clang-p2996 && ls -l && ls -l llvm && ls -l clang && ls -l cmake || true\n#14 CACHED\n\n#15 [10/19] RUN cd /tmp/clang-p2996/build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .. || (cat /tmp/clang-p2996/build/CMakeFiles/CMakeError.log || true; cat /tmp/clang-p2996/build/CMakeFiles/CMakeOutput.log || true; ls -l /tmp/clang-p2996/build/CMakeFiles/ || true; sleep 60; exit 1)\n#15 1.230 CMake Warning:\n#15 1.230   Ignoring extra path from command line:\n#15 1.230 \n#15 1.230    \"..\"\n#15 1.230 \n#15 1.230 \n#15 1.230 CMake Error: The source directory \"/tmp/clang-p2996\" does not appear to contain CMakeLists.txt.\n#15 1.230 Specify --help for usage, or press the help button on the CMake GUI.\n#15 1.232 cat: /tmp/clang-p2996/build/CMakeFiles/CMakeError.log: No such file or directory\n#15 1.234 cat: /tmp/clang-p2996/build/CMakeFiles/CMakeOutput.log: No such file or directory\n#15 1.234 ls: cannot access '/tmp/clang-p2996/build/CMakeFiles/': No such file or directory\n#15 ERROR: process \"/bin/sh -c cd /tmp/clang-p2996/build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .. || (cat /tmp/clang-p2996/build/CMakeFiles/CMakeError.log || true; cat /tmp/clang-p2996/build/CMakeFiles/CMakeOutput.log || true; ls -l /tmp/clang-p2996/build/CMakeFiles/ || true; sleep 60; exit 1)\" did not complete successfully: exit code: 1\n------\n > [10/19] RUN cd /tmp/clang-p2996/build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .. || (cat /tmp/clang-p2996/build/CMakeFiles/CMakeError.log || true; cat /tmp/clang-p2996/build/CMakeFiles/CMakeOutput.log || true; ls -l /tmp/clang-p2996/build/CMakeFiles/ || true; sleep 60; exit 1):\n1.230   Ignoring extra path from command line:\n1.230 \n1.230    \"..\"\n1.230 \n1.230 \n1.230 CMake Error: The source directory \"/tmp/clang-p2996\" does not appear to contain CMakeLists.txt.\n1.230 Specify --help for usage, or press the help button on the CMake GUI.\n1.232 cat: /tmp/clang-p2996/build/CMakeFiles/CMakeError.log: No such file or directory\n1.234 cat: /tmp/clang-p2996/build/CMakeFiles/CMakeOutput.log: No such file or directory\n1.234 ls: cannot access '/tmp/clang-p2996/build/CMakeFiles/': No such file or directory\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 3)\nenvgym.dockerfile:105\n--------------------\n 103 |     \n 104 |     # Run configure, and if it fails, print errors and output logs\n 105 | >>> RUN cd /tmp/clang-p2996/build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .. || (cat /tmp/clang-p2996/build/CMakeFiles/CMakeError.log || true; cat /tmp/clang-p2996/build/CMakeFiles/CMakeOutput.log || true; ls -l /tmp/clang-p2996/build/CMakeFiles/ || true; sleep 60; exit 1)\n 106 |     RUN cd /tmp/clang-p2996/build && ninja\n 107 |     RUN cp /tmp/clang-p2996/build/bin/clang* /usr/local/bin/ || true\n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c cd /tmp/clang-p2996/build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .. || (cat /tmp/clang-p2996/build/CMakeFiles/CMakeError.log || true; cat /tmp/clang-p2996/build/CMakeFiles/CMakeOutput.log || true; ls -l /tmp/clang-p2996/build/CMakeFiles/ || true; sleep 60; exit 1)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}