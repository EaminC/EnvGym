{
  "timestamp": "20250721_111530",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753096524",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 3.56kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/20] FROM docker.io/library/ubuntu:22.04@sha256:1ec65b2719518e27d4d25f104d93f9fac60dc437f81452302406825c46fcc9cb\n#4 DONE 0.0s\n\n#5 [ 5/20] RUN wget -q https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.2/graalvm-ce-java17-linux-amd64-22.3.2.tar.gz &&     tar -xzf graalvm-ce-java17-linux-amd64-22.3.2.tar.gz -C /opt &&     rm graalvm-ce-java17-linux-amd64-22.3.2.tar.gz &&     ls -l /opt &&     ln -s /opt/graalvm-ce-java17-22.3.2 /opt/graalvm\n#5 CACHED\n\n#6 [ 3/20] RUN mkdir -p /home/cc/EnvGym/data/gluetest\n#6 CACHED\n\n#7 [ 4/20] WORKDIR /home/cc/EnvGym/data/gluetest\n#7 CACHED\n\n#8 [ 2/20] RUN apt-get update &&     apt-get install -y --no-install-recommends         build-essential         curl         git         unzip         zip         wget         ca-certificates         bash         openssl         libssl-dev         zlib1g-dev         libbz2-dev         libreadline-dev         libsqlite3-dev         llvm         libncursesw5-dev         xz-utils         tk-dev         libxml2-dev         libxmlsec1-dev         libffi-dev         liblzma-dev         software-properties-common         maven         python3-venv         python3-pip         python3-setuptools         python3-distutils     && rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [ 6/20] RUN ls -l /opt && ls -lR /opt/graalvm-ce-java17-22.3.2 || (echo \"Directory /opt/graalvm-ce-java17-22.3.2 does not exist. Listing /opt:\" && ls -l /opt && false)\n#9 CACHED\n\n#10 [ 7/20] RUN if [ -f \"/opt/graalvm-ce-java17-22.3.2/bin/gu\" ]; then chmod +x /opt/graalvm-ce-java17-22.3.2/bin/gu; fi\n#10 CACHED\n\n#11 [internal] load build context\n#11 transferring context: 652.21kB 0.0s done\n#11 DONE 0.0s\n\n#12 [ 8/20] RUN ls -l /opt/graalvm-ce-java17-22.3.2/bin/gu && /opt/graalvm-ce-java17-22.3.2/bin/gu --version\n#12 0.230 lrwxrwxrwx 1 root root 23 Apr 20  2023 /opt/graalvm-ce-java17-22.3.2/bin/gu -> ../lib/installer/bin/gu\n#12 0.235 GraalVM Updater 22.3.2\n#12 DONE 0.3s\n\n#13 [ 9/20] RUN /opt/graalvm-ce-java17-22.3.2/bin/gu list\n#13 0.390 ComponentId              Version             Component name                Stability                     Origin \n#13 0.390 ---------------------------------------------------------------------------------------------------------------------------------\n#13 0.390 graalvm                  22.3.2              GraalVM Core                  Supported                     \n#13 DONE 0.4s\n\n#14 [10/20] RUN apt-get update && apt-get install -y --no-install-recommends libz-dev libexpat1 && rm -rf /var/lib/apt/lists/*\n#14 0.398 Get:1 http://archive.ubuntu.com/ubuntu jammy InRelease [270 kB]\n#14 0.511 Get:2 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]\n#14 0.532 Get:3 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]\n#14 0.538 Get:4 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]\n#14 0.600 Get:5 http://archive.ubuntu.com/ubuntu jammy/universe amd64 Packages [17.5 MB]\n#14 0.837 Get:6 http://archive.ubuntu.com/ubuntu jammy/main amd64 Packages [1792 kB]\n#14 0.849 Get:7 http://archive.ubuntu.com/ubuntu jammy/restricted amd64 Packages [164 kB]\n#14 0.850 Get:8 http://archive.ubuntu.com/ubuntu jammy/multiverse amd64 Packages [266 kB]\n#14 0.852 Get:9 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1572 kB]\n#14 0.862 Get:10 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [5139 kB]\n#14 0.897 Get:11 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [3461 kB]\n#14 0.920 Get:12 http://archive.ubuntu.com/ubuntu jammy-updates/multiverse amd64 Packages [75.9 kB]\n#14 0.920 Get:13 http://archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [83.2 kB]\n#14 0.921 Get:14 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [35.2 kB]\n#14 0.997 Get:15 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [4932 kB]\n#14 1.576 Get:16 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [3148 kB]\n#14 1.664 Get:17 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [1267 kB]\n#14 1.686 Get:18 http://security.ubuntu.com/ubuntu jammy-security/multiverse amd64 Packages [48.5 kB]\n#14 2.675 Fetched 40.1 MB in 2s (17.4 MB/s)\n#14 2.675 Reading package lists...\n#14 3.709 Reading package lists...\n#14 4.670 Building dependency tree...\n#14 4.835 Reading state information...\n#14 5.022 libexpat1 is already the newest version (2.4.7-1ubuntu0.6).\n#14 5.022 libexpat1 set to manually installed.\n#14 5.022 zlib1g-dev is already the newest version (1:1.2.11.dfsg-2ubuntu9.2).\n#14 5.022 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\n#14 DONE 5.1s\n\n#15 [11/20] RUN /opt/graalvm-ce-java17-22.3.2/bin/gu install python || (echo \"gu install python failed, showing help:\" && /opt/graalvm-ce-java17-22.3.2/bin/gu --help && false)\n#15 0.358 Downloading: Component catalog from www.graalvm.org\n#15 0.488 Error: Component python requires to upgrade GraalVM Core to at least 23.0.0.\n#15 0.491 gu install python failed, showing help:\n#15 0.495 GraalVM Component Updater v2.0.0\n#15 0.495 \n#15 0.495 Usage: \n#15 0.495 \tgu info [-cClLnprstuvVJ] <param>        print info about a specific component (from a file, a URL or a catalog)\n#15 0.495 \tgu available [-aClvVJ] <expr>           list components available in a catalog\n#15 0.495 \tgu install [-0CcDfiLMnosruvyxY] <param> install a component package\n#15 0.495 \tgu list [-clvJ] <expression>            list installed components, or components from a catalog\n#15 0.495 \tgu remove [-0DfMxv] <id>                uninstall a component\n#15 0.495 \tgu upgrade [-cCnLsuxSd] [<ver>] [<cmp>] upgrade to a recent GraalVM or edition\n#15 0.495 \tgu rebuild-images                       rebuild native executables. Use -h for detailed usage\n#15 0.495 \n#15 0.495 Common options:\n#15 0.495   -A, --auto-yes              respond YES or ACCEPT to all questions.\n#15 0.495   -c, --catalog               treat parameters as component IDs from a catalog of GraalVM components. This is the default.\n#15 0.495   -C, --custom-catalog <url>  use user-supplied catalog at URL.\n#15 0.495   -e, --debug                 debugging. Prints stacktraces, ...\n#15 0.495   -E, --no-catalog-errors     do not stop if at least one catalog is working.\n#15 0.495   -h, --help                  print help.\n#15 0.495   -L, --local-file, --file    treat parameters as local filenames of packaged components.\n#15 0.495   -N, --non-interactive       noninteractive mode. Fail when input is required.\n#15 0.495   --show-version              print version information and continue.\n#15 0.495   -u, --url                   interpret parameters as URLs of packaged components.\n#15 0.495   -v, --verbose               be verbose. Print versions and dependency information.\n#15 0.495   --version                   print version.\n#15 0.495 \n#15 0.495 Additonal options:\n#15 0.495 \t--config <path>           path to configuration file\n#15 0.495 \t--show-ee-token           print current download token\n#15 0.495     \n#15 0.495 Use \n#15 0.495 \tgu <command> -h\n#15 0.495 to get specific help.\n#15 0.495 \n#15 0.495 Runtime options:\n#15 0.495   --native                                     Run using the native launcher with limited access to Java libraries\n#15 0.495                                                (default).\n#15 0.495   --jvm                                        Run on the Java Virtual Machine with access to Java libraries.\n#15 0.495   --vm.[option]                                Pass options to the host VM. To see available options, use '--help:vm'.\n#15 0.495   --log.file=<String>                          Redirect guest languages logging into a given file.\n#15 0.495   --log.[logger].level=<String>                Set language log level to OFF, SEVERE, WARNING, INFO, CONFIG, FINE,\n#15 0.495                                                FINER, FINEST or ALL.\n#15 0.495   --help                                       Print this help message.\n#15 0.495   --help:vm                                    Print options for the host VM.\n#15 0.495 \n#15 0.495 See http://www.graalvm.org for more information.\n#15 ERROR: process \"/bin/sh -c $JAVA_HOME/bin/gu install python || (echo \\\"gu install python failed, showing help:\\\" && $JAVA_HOME/bin/gu --help && false)\" did not complete successfully: exit code: 1\n------\n > [11/20] RUN /opt/graalvm-ce-java17-22.3.2/bin/gu install python || (echo \"gu install python failed, showing help:\" && /opt/graalvm-ce-java17-22.3.2/bin/gu --help && false):\n0.495                                                (default).\n0.495   --jvm                                        Run on the Java Virtual Machine with access to Java libraries.\n0.495   --vm.[option]                                Pass options to the host VM. To see available options, use '--help:vm'.\n0.495   --log.file=<String>                          Redirect guest languages logging into a given file.\n0.495   --log.[logger].level=<String>                Set language log level to OFF, SEVERE, WARNING, INFO, CONFIG, FINE,\n0.495                                                FINER, FINEST or ALL.\n0.495   --help                                       Print this help message.\n0.495   --help:vm                                    Print options for the host VM.\n0.495 \n0.495 See http://www.graalvm.org for more information.\n------\nenvgym.dockerfile:75\n--------------------\n  73 |     \n  74 |     # Try to install GraalVM Python component, fallback to help if fails\n  75 | >>> RUN $JAVA_HOME/bin/gu install python || (echo \"gu install python failed, showing help:\" && $JAVA_HOME/bin/gu --help && false)\n  76 |     \n  77 |     # Verify graalpython is available\n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c $JAVA_HOME/bin/gu install python || (echo \\\"gu install python failed, showing help:\\\" && $JAVA_HOME/bin/gu --help && false)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}