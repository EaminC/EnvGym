{
  "timestamp": "20250827_221611",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756332963",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.11kB done\n#1 DONE 0.0s\n\n#2 resolve image config for docker-image://docker.io/docker/dockerfile:1.4\n#2 DONE 0.2s\n\n#3 docker-image://docker.io/docker/dockerfile:1.4@sha256:9ba7531bd80fb0a858632727cf7a112fbfd19b17e94c4e84ced81e24ef1a0dbc\n#3 CACHED\n\n#4 [internal] load .dockerignore\n#4 transferring context: 2B done\n#4 DONE 0.0s\n\n#5 [internal] load metadata for docker.io/library/ubuntu:22.04\n#5 DONE 0.1s\n\n#6 [ 1/20] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#6 DONE 0.0s\n\n#7 [internal] load build context\n#7 transferring context: 618.54kB 0.1s done\n#7 DONE 0.1s\n\n#8 [ 5/20] RUN go version\n#8 CACHED\n\n#9 [ 3/20] RUN locale-gen en_US.UTF-8\n#9 CACHED\n\n#10 [ 6/20] RUN go env\n#10 CACHED\n\n#11 [ 7/20] RUN useradd -m -u 1000 appuser\n#11 CACHED\n\n#12 [ 2/20] RUN apt-get update && apt-get install -y --no-install-recommends     ca-certificates     curl     git     bash     openssl     iproute2     iputils-ping     net-tools     iputils-tracepath     locales     dnsutils     && rm -rf /var/lib/apt/lists/*\n#12 CACHED\n\n#13 [ 4/20] RUN set -eux;     arch=amd64;     curl -fsSL https://golang.org/dl/go1.21.0.linux-${arch}.tar.gz -o /tmp/go.tar.gz;     tar -C /usr/local -xzf /tmp/go.tar.gz;     rm /tmp/go.tar.gz\n#13 CACHED\n\n#14 [ 8/20] WORKDIR /src\n#14 CACHED\n\n#15 [ 9/20] COPY --chown=appuser:appuser . /src\n#15 DONE 0.3s\n\n#16 [10/20] RUN test -f go.mod && test -f go.sum\n#16 DONE 0.2s\n\n#17 [11/20] RUN nslookup proxy.golang.org || echo \"Warning: nslookup proxy.golang.org failed\"\n#17 0.439 Server:\t\t8.8.8.8\n#17 0.439 Address:\t8.8.8.8#53\n#17 0.439 \n#17 0.439 Non-authoritative answer:\n#17 0.439 Name:\tproxy.golang.org\n#17 0.439 Address: 173.194.219.141\n#17 0.439 Name:\tproxy.golang.org\n#17 0.439 Address: 2607:f8b0:4002:c03::8d\n#17 0.439 \n#17 DONE 0.4s\n\n#18 [12/20] RUN curl -v https://proxy.golang.org || echo \"Warning: curl to proxy.golang.org failed\"\n#18 0.379   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#18 0.379                                  Dload  Upload   Total   Spent    Left  Speed\n#18 0.379 \n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 173.194.219.141:443...\n#18 0.413 * Connected to proxy.golang.org (173.194.219.141) port 443 (#0)\n#18 0.416 * ALPN, offering h2\n#18 0.416 * ALPN, offering http/1.1\n#18 0.466 *  CAfile: /etc/ssl/certs/ca-certificates.crt\n#18 0.466 *  CApath: /etc/ssl/certs\n#18 0.466 * TLSv1.0 (OUT), TLS header, Certificate Status (22):\n#18 0.466 } [5 bytes data]\n#18 0.466 * TLSv1.3 (OUT), TLS handshake, Client hello (1):\n#18 0.466 } [512 bytes data]\n#18 0.487 * TLSv1.2 (IN), TLS header, Certificate Status (22):\n#18 0.487 { [5 bytes data]\n#18 0.487 * TLSv1.3 (IN), TLS handshake, Server hello (2):\n#18 0.487 { [122 bytes data]\n#18 0.487 * TLSv1.2 (IN), TLS header, Finished (20):\n#18 0.487 { [5 bytes data]\n#18 0.487 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.487 { [5 bytes data]\n#18 0.487 * TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):\n#18 0.487 { [15 bytes data]\n#18 0.487 * TLSv1.3 (IN), TLS handshake, Certificate (11):\n#18 0.487 { [9956 bytes data]\n#18 0.489 * TLSv1.3 (IN), TLS handshake, CERT verify (15):\n#18 0.489 { [79 bytes data]\n#18 0.489 * TLSv1.3 (IN), TLS handshake, Finished (20):\n#18 0.489 { [52 bytes data]\n#18 0.489 * TLSv1.2 (OUT), TLS header, Finished (20):\n#18 0.489 } [5 bytes data]\n#18 0.489 * TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):\n#18 0.489 } [1 bytes data]\n#18 0.489 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#18 0.489 } [5 bytes data]\n#18 0.489 * TLSv1.3 (OUT), TLS handshake, Finished (20):\n#18 0.489 } [52 bytes data]\n#18 0.489 * SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384\n#18 0.489 * ALPN, server accepted to use h2\n#18 0.489 * Server certificate:\n#18 0.489 *  subject: CN=misc-sni.google.com\n#18 0.489 *  start date: Aug 11 19:21:49 2025 GMT\n#18 0.489 *  expire date: Nov  3 19:21:48 2025 GMT\n#18 0.490 *  subjectAltName: host \"proxy.golang.org\" matched cert's \"*.golang.org\"\n#18 0.490 *  issuer: C=US; O=Google Trust Services; CN=WE2\n#18 0.490 *  SSL certificate verify ok.\n#18 0.490 * Using HTTP2, server supports multiplexing\n#18 0.490 * Connection state changed (HTTP/2 confirmed)\n#18 0.490 * Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n#18 0.490 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#18 0.490 } [5 bytes data]\n#18 0.490 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#18 0.490 } [5 bytes data]\n#18 0.490 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#18 0.490 } [5 bytes data]\n#18 0.490 * Using Stream ID: 1 (easy handle 0x55fb86fea9f0)\n#18 0.490 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#18 0.490 } [5 bytes data]\n#18 0.490 > GET / HTTP/2\n#18 0.490 > Host: proxy.golang.org\n#18 0.490 > user-agent: curl/7.81.0\n#18 0.490 > accept: */*\n#18 0.490 > \n#18 0.511 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.511 { [5 bytes data]\n#18 0.511 * TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):\n#18 0.511 { [282 bytes data]\n#18 0.511 * TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):\n#18 0.511 { [282 bytes data]\n#18 0.511 * old SSL session ID is stale, removing\n#18 0.511 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.511 { [5 bytes data]\n#18 0.511 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#18 0.511 } [5 bytes data]\n#18 0.516 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.516 { [5 bytes data]\n#18 0.520 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.520 { [5 bytes data]\n#18 0.520 < HTTP/2 200 \n#18 0.520 < accept-ranges: bytes\n#18 0.520 < access-control-allow-origin: *\n#18 0.520 < content-length: 9628\n#18 0.520 < content-security-policy-report-only: script-src 'none'; form-action 'none'; frame-src 'none'; report-uri https://csp.withgoogle.com/csp/goa-fa2dfb7c_2\n#18 0.520 < cross-origin-opener-policy: same-origin\n#18 0.520 < x-content-type-options: nosniff\n#18 0.520 < x-frame-options: SAMEORIGIN\n#18 0.520 < x-xss-protection: 0\n#18 0.520 < date: Wed, 27 Aug 2025 22:15:41 GMT\n#18 0.520 < expires: Wed, 27 Aug 2025 22:45:41 GMT\n#18 0.520 < cache-control: public, max-age=1800\n#18 0.520 < content-type: text/html; charset=UTF-8\n#18 0.520 < vary: Sec-Fetch-Site,Sec-Fetch-Mode,Sec-Fetch-Dest\n#18 0.520 < age: 24\n#18 0.520 < alt-svc: h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000\n#18 0.520 < \n#18 0.520 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.520 { [5 bytes data]\n#18 0.520 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.520 { [5 bytes data]\n#18 0.521 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.521 { [5 bytes data]\n#18 0.521 <!DOCTYPE html>\n#18 0.521 <html lang=\"en\">\n#18 0.521   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n#18 0.521   <title>Go modules services</title>\n#18 0.521   <style>\n#18 0.521     .container {\n#18 0.521       font-size: 1.6em;\n#18 0.521       line-height: 1.4;\n#18 0.521       margin: 3.5em auto;\n#18 0.521       max-width: 45em;\n#18 0.521       padding: 0 1.5em;\n#18 0.521     }\n#18 0.521     body {\n#18 0.521       font: 62.5% Arial, sans-serif;\n#18 0.521     }\n#18 0.521     code {\n#18 0.521       background-color: #f0f8ff;\n#18 0.521     }\n#18 0.521   </style>\n#18 0.521 \n#18 0.521   <div class=\"container\">\n#18 0.521   <h1>Go Module Mirror, Index, and Checksum Database</h1>\n#18 0.521   <p>The Go team is providing the following services run by Google: a module mirror for accelerating\n#18 0.521     Go module downloads, an index for discovering new modules, and a global go.sum database for\n#18 0.521     authenticating module content.</p>\n#18 0.521 \n#18 0.521   <p>Since Go 1.13, the go command by default downloads and authenticates modules using the Go\n#18 0.521     module mirror and Go checksum database. See\n#18 0.521     <a href=\"privacy\">proxy.golang.org/privacy</a> for privacy information\n#18 0.521     about these services and the\n#18 0.521     <a href=\"https://golang.org/ref/mod#private-module-privacy\">go command documentation</a>\n#18 0.521     for configuration details including how to disable the use of these servers or use different\n#18 0.521     ones. If you depend on non-public modules, see the\n#18 0.521     <a href=\"https://pkg.go.dev/cmd/go#hdr-Configuration_for_downloading_non_public_code\">documentation for configuring your environment</a>.\n#18 0.521   </p>\n#18 0.521 \n#18 0.521   <h2 id=\"services\">Services</h2>\n#18 0.521   <p><a href=\"https://proxy.golang.org\"><strong>proxy.golang.org</strong></a> - a module mirror\n#18 0.521     which implements the <a href=\"https://golang.org/ref/mod#goproxy-protocol\">module proxy protocol</a>.\n#18 0.521     For users downloading large numbers of modules (e.g. for bulk static analysis), the mirror\n#18 0.521     supports a separate endpoint <code>/cached-only</code> that instructs the proxy to\n#18 0.521     return only cached content. This will avoid slow downloads, at the cost of possibly missing some\n#18 0.521     rarely-used modules.\n#18 0.521   </p>\n#18 0.521   <p>\n#18 0.521     <code>\n#18 0.521     GOPROXY=https://proxy.golang.org/cached-only go mod download golang.org/x/tools@v0.1.0\n#18 0.521     </code>\n#18 0.521   </p>\n#18 0.521 \n#18 0.521   <p><a href=\"https://sum.golang.org\"><strong>sum.golang.org</strong></a> - an auditable checksum\n#18 0.521     database which will be used by the go command to authenticate modules.\n#18 0.521     Learn more in the <a href=\"https://golang.org/ref/mod#checksum-database\">go command documentation</a>.</p>\n#18 0.521 \n#18 0.521   <p><a href=\"https://index.golang.org\"><strong>index.golang.org</strong></a> - an index which\n#18 0.521     serves a feed of new module versions that become available by proxy.golang.org. The feed\n#18 0.521     can be viewed at <a href=\"https://index.golang.org/index\">https://index.golang.org/index</a>.\n#18 0.521     The feed is served as new line delimited JSON, providing the module path (as Path), the module\n#18 0.521     version (as Version), and the time it was first cached by proxy.golang.org (as Timestamp). The\n#18 0.521     list is sorted in chronological order. There are optional parameters:</p>\n#18 0.521     <ul>\n#18 0.521       <li>\n#18 0.521         'since': the oldest allowable timestamp (RFC3339 format) for module versions in the returned list. Default\n#18 0.521         is the beginning of time, e.g.\n#18 0.521         <a href=\"https://index.golang.org/index?since=2019-04-10T19:08:52.997264Z\">https://index.golang.org/index?since=2019-04-10T19:08:52.997264Z</a>\n#18 0.521       </li>\n#18 0.521       <li>\n#18 0.521         'limit': the maximum length of the returned list. Default = 2000, Max = 2000, e.g.\n#18 0.521         <a href=\"https://index.golang.org/index?limit=10\">https://index.golang.org/index?limit=10</a>\n#18 0.521       </li>\n#18 0.521       <li>\n#18 0.521         'include': by default, the index returns module versions that proxy.golang.org has cached\n#18 0.521         copies. If 'include=all', index.golang.org will return all module versions proxy.golang.org\n#18 0.521         or sum.golang.org ever served. Default = \"\" e.g.\n#18 0.521         <a href=\"https://index.golang.org/index?include=all\">https://index.golang.org/index?include=all</a>\n#18 0.521       </li>\n#18 0.521     </ul>\n#18 0.521     <p>If you use the index to download many modules from the module mirror, you will want to use\n#18 0.521     the <code>/cached-only</code> endpoint, described above.\n#18 0.521   </p>\n#18 0.521 \n#18 0.521   <h2 id=\"status\">Status: Launched</h2>\n#18 0.521   <p>These services are ready for p* TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.521 { [5 bytes data]\n#18 0.522 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.522 { [5 bytes data]\n#18 0.522 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.522 { [5 bytes data]\n#18 0.522 roduction use. Please\n#18 0.522     <a href=\"https://golang.org/issue/new?title=proxy.golang.org:%20\">file issues</a>\n#18 0.522     if you spot them, with the title prefix \"proxy.golang.org:\" (or \"index.golang.org:\", or\n#18 0.522     \"sum.golang.org:\").</p>\n#18 0.522 \n#18 0.522   <h2 id=\"environment-setup\">Environment setup</h2>\n#18 0.522 \n#18 0.522   <p>These services can only access publicly available source code. If you depend on private\n#18 0.522     modules, set <code>GOPRIVATE</code> to a glob pattern that covers them. See\n#18 0.522     <a href=\"https://pkg.go.dev/cmd/go#hdr-Configuration_for_downloading_non_public_code\">Module configuration for non-public modules</a>\n#18 0.522     in the go command documentation for more details.</p>\n#18 0.522 \n#18 0.522   <p>To opt-out of this module mirror, you can turn it off by setting <code>GOPROXY=direct</code></p>\n#18 0.522 \n#18 0.522   <p>See the <a href=\"https://golang.org/ref/mod#private-module-privacy\">go command documentation</a>\n#18 0.522     for other configuration details.</p>\n#18 0.522 \n#18 0.522   <h2 id=\"faq\">FAQ</h2>\n#18 0.522 \n#18 0.522   <h3 id=\"faq-refresh-traffic\">\n#18 0.522     Why is proxy.golang.org sending me so much traffic?</h3>\n#18 0.522   <p>The Go module mirror tries to keep its cache up to date by refreshing recently accessed\n#18 0.522     information before it expires. If your server is seeing too much traffic, we can disable that\n#18 0.522     speculative refresh or work with you to understand the traffic better. Please file a\n#18 0.522     <a href=\"https://golang.org/issue/new?title=proxy.golang.org%3A+\">GitHub issue</a> or email us\n#18 0.522     at <a href=\"mailto:security@golang.org\">security@golang.org</a>.</p>\n#18 0.522 \n#18 0.522   <h3 id=\"faq-new-version\">\n#18 0.522     I committed a new change (or released a new version) to a repository, why isn't it showing up\n#18 0.522     when I run <code>go get -u</code> or <code>go list -m --versions</code>?</h3>\n#18 0.522   <p>In order to improve our services' caching and serving latencies, new versions may not show up\n#18 0.522     right away. If you want new code to be immediately available in the mirror, then first make sure\n#18 0.522     there is a semantically versioned tag for this revision in the underlying source repository.\n#18 0.522     Then explicitly request that version via <code>go get module@version</code>. The new version\n#18 0.522     should be available within one minute. Note that if someone requested the version before the tag\n#18 0.522     was pushed, it may take up to 30 minutes for the mirror's cache to expire and fresh data about\n#18 0.522     the version to become available. If the version is still not available after 30 minutes, please\n#18 0.522     <a href=\"https://golang.org/issue/new?title=proxy.golang.org%3A+\">file an issue</a>.</p>\n#18 0.522 \n#18 0.522   <h3 id=\"faq-retract-version\">\n#18 0.522     I removed a bad release from my repository but it still appears in the mirror, what should I do?</h3>\n#18 0.522   <p>Whenever possible, the mirror aims to cache content in order to avoid breaking builds for people\n#18 0.522     that depend on your package, so this bad release may still be available in the mirror even if it\n#18 0.522     is not available at the origin. The same situation applies if you delete your entire repository.\n#18 0.522     We suggest creating a new version and encouraging people to use that one instead.</p>\n#18 0.522 \n#18 0.522   <p>If you would like to hide versions of a module from the <code>go</code>\n#18 0.522     command, as well as <a href=\"https://pkg.go.dev\">pkg.go.dev</a>, you should retract them.\n#18 0.522     Retracting a module version involves adding a <a href=\"https://golang.org/ref/mod#go-mod-file-retract\">retract directive</a>\n#18 0.522     to your go.mod file and publishing a new version. See the Go blog post\n#18 0.522     <a href=\"https://go.dev/blog/go116-module-changes#module-retraction\">New module changes in Go 1.16</a> and\n#18 0.522     the <a href=\"https://go.dev/ref/mod#go-mod-file-retract\">modules reference</a> for details.</p>\n#18 0.522 \n#18 0.522   <h3 id=\"faq-cannot-use\">\n#18 0.522     I'm running the go command in an environment that can't use the mirror.</h3>\n#18 0.522   <p>The <a href=\"https://golang.org/ref/mod#private-module-privacy\">go command documentation</a>\n#18 0.522     describes the configuration details including how to disable the use of these servers or use\n#18 0.522     different ones.</p>\n#18 0.522 \n#18 0.522   <h3 id=\"faq-private\">\n#18 0.522     If I don't set <code>GOPRIVATE</code> and request a private module from these services,\n#18 0.522     what leaks?</h3>\n#18 0.522   <p>The proxy and checksum database protocol* TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.523 { [5 bytes data]\n#18 0.523 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#18 0.523 { [5 bytes data]\n#18 0.523 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#18 0.523 } [5 bytes data]\n#18 0.523 \n100  9628  100  9628    0     0  66912      0 --:--:-- --:--:-- --:--:-- 67328\n#18 0.523 * Connection #0 to host proxy.golang.org left intact\n#18 0.523 s only send module paths and versions to the remote\n#18 0.523     server. If you request a private module, the mirror will try to download it just as any Go\n#18 0.523     user would and fail in the same way. Information about failed requests isn't published\n#18 0.523     anywhere. The only trace of the request will be in internal logs, which\n#18 0.523     are governed by the <a href=\"privacy\">privacy policy</a>.</p>\n#18 0.523 \n#18 0.523   <h3 id=\"faq-retention\">\n#18 0.523     Why did a previously available module become unavailable in the mirror?</h3>\n#18 0.523   <p><a href=\"https://proxy.golang.org\">proxy.golang.org</a> does not save all modules forever.\n#18 0.523     There are a number of reasons for this, but one reason is if\n#18 0.523     <a href=\"https://proxy.golang.org\">proxy.golang.org</a> is not able to detect a suitable\n#18 0.523     license. In this case, only a temporarily cached copy of the module will be made available, and\n#18 0.523     may become unavailable if it is removed from the original source and becomes outdated.\n#18 0.523     The checksums will still remain in the checksum database regardless of whether or not they\n#18 0.523     have become unavailable in the mirror.</p>\n#18 0.523 \n#18 0.523   <h3 id=\"faq-security\">\n#18 0.523     I have discovered a malicious module version in the mirror. Where do I report it?</h3>\n#18 0.523   <p>Following <a href=\"https://golang.org/security#reporting\">the security policy</a>, send an\n#18 0.523     email to <a href=\"mailto:security@golang.org\">security@golang.org</a> with the word\n#18 0.523     \"vulnerability\" in the message somewhere.</p>\n#18 0.523 \n#18 0.523   </div>\n#18 DONE 0.5s\n\n#19 [13/20] RUN curl -v https://golang.org || echo \"Warning: curl to golang.org failed\"\n#19 0.381   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n#19 0.381                                  Dload  Upload   Total   Spent    Left  Speed\n#19 0.382 \n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 64.233.176.141:443...\n#19 0.416 * Connected to golang.org (64.233.176.141) port 443 (#0)\n#19 0.418 * ALPN, offering h2\n#19 0.418 * ALPN, offering http/1.1\n#19 0.467 *  CAfile: /etc/ssl/certs/ca-certificates.crt\n#19 0.467 *  CApath: /etc/ssl/certs\n#19 0.467 * TLSv1.0 (OUT), TLS header, Certificate Status (22):\n#19 0.467 } [5 bytes data]\n#19 0.467 * TLSv1.3 (OUT), TLS handshake, Client hello (1):\n#19 0.467 } [512 bytes data]\n#19 0.489 * TLSv1.2 (IN), TLS header, Certificate Status (22):\n#19 0.489 { [5 bytes data]\n#19 0.489 * TLSv1.3 (IN), TLS handshake, Server hello (2):\n#19 0.489 { [122 bytes data]\n#19 0.490 * TLSv1.2 (IN), TLS header, Finished (20):\n#19 0.490 { [5 bytes data]\n#19 0.490 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#19 0.490 { [5 bytes data]\n#19 0.490 * TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):\n#19 0.490 { [15 bytes data]\n#19 0.490 * TLSv1.3 (IN), TLS handshake, Certificate (11):\n#19 0.490 { [9956 bytes data]\n#19 0.492 * TLSv1.3 (IN), TLS handshake, CERT verify (15):\n#19 0.492 { [79 bytes data]\n#19 0.492 * TLSv1.3 (IN), TLS handshake, Finished (20):\n#19 0.492 { [52 bytes data]\n#19 0.492 * TLSv1.2 (OUT), TLS header, Finished (20):\n#19 0.492 } [5 bytes data]\n#19 0.492 * TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):\n#19 0.492 } [1 bytes data]\n#19 0.492 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#19 0.492 } [5 bytes data]\n#19 0.492 * TLSv1.3 (OUT), TLS handshake, Finished (20):\n#19 0.492 } [52 bytes data]\n#19 0.492 * SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384\n#19 0.492 * ALPN, server accepted to use h2\n#19 0.492 * Server certificate:\n#19 0.492 *  subject: CN=misc-sni.google.com\n#19 0.492 *  start date: Aug 11 19:21:49 2025 GMT\n#19 0.492 *  expire date: Nov  3 19:21:48 2025 GMT\n#19 0.492 *  subjectAltName: host \"golang.org\" matched cert's \"golang.org\"\n#19 0.492 *  issuer: C=US; O=Google Trust Services; CN=WE2\n#19 0.492 *  SSL certificate verify ok.\n#19 0.492 * Using HTTP2, server supports multiplexing\n#19 0.492 * Connection state changed (HTTP/2 confirmed)\n#19 0.492 * Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n#19 0.492 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#19 0.492 } [5 bytes data]\n#19 0.492 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#19 0.492 } [5 bytes data]\n#19 0.492 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#19 0.492 } [5 bytes data]\n#19 0.492 * Using Stream ID: 1 (easy handle 0x55721597d9f0)\n#19 0.492 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#19 0.492 } [5 bytes data]\n#19 0.492 > GET / HTTP/2\n#19 0.492 > Host: golang.org\n#19 0.492 > user-agent: curl/7.81.0\n#19 0.492 > accept: */*\n#19 0.492 > \n#19 0.513 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#19 0.513 { [5 bytes data]\n#19 0.513 * TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):\n#19 0.513 { [282 bytes data]\n#19 0.513 * TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):\n#19 0.513 { [282 bytes data]\n#19 0.513 * old SSL session ID is stale, removing\n#19 0.513 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#19 0.513 { [5 bytes data]\n#19 0.513 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#19 0.513 } [5 bytes data]\n#19 0.514 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#19 0.514 { [5 bytes data]\n#19 0.567 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#19 0.567 { [5 bytes data]\n#19 0.567 < HTTP/2 301 \n#19 0.567 < content-type: text/html; charset=utf-8\n#19 0.567 < content-security-policy: connect-src 'self' www.google-analytics.com stats.g.doubleclick.net ; default-src 'self' ; font-src 'self' fonts.googleapis.com fonts.gstatic.com data: ; frame-ancestors 'self' ; frame-src 'self' www.google.com feedback.googleusercontent.com www.googletagmanager.com scone-pa.clients6.google.com www.youtube.com player.vimeo.com ; img-src 'self' www.google.com www.google-analytics.com ssl.gstatic.com www.gstatic.com gstatic.com data: * ; object-src 'none' ; script-src 'self' 'sha256-n6OdwTrm52KqKm6aHYgD0TFUdMgww4a0GQlIAVrMzck=' 'sha256-4ryYrf7Y5daLOBv0CpYtyBIcJPZkRD2eBPdfqsN3r1M=' 'sha256-sVKX08+SqOmnWhiySYk3xC7RDUgKyAkmbXV2GWts4fo=' www.google.com apis.google.com www.gstatic.com gstatic.com support.google.com www.googletagmanager.com www.google-analytics.com ssl.google-analytics.com tagmanager.google.com ; style-src 'self' 'unsafe-inline' fonts.googleapis.com feedback.googleusercontent.com www.gstatic.com gstatic.com tagmanager.google.com ;\n#19 0.567 < location: https://go.dev/\n#19 0.567 < strict-transport-security: max-age=31536000; includeSubDomains; preload\n#19 0.567 < x-cloud-trace-context: e7caeac81f28f5dc3a2efd2b7a4dc713\n#19 0.567 < date: Wed, 27 Aug 2025 22:16:06 GMT\n#19 0.567 < server: Google Frontend\n#19 0.567 < content-length: 50\n#19 0.567 < alt-svc: h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000\n#19 0.567 < \n#19 0.567 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#19 0.567 { [5 bytes data]\n#19 0.567 * TLSv1.2 (IN), TLS header, Supplemental data (23):\n#19 0.567 { [5 bytes data]\n#19 0.567 * TLSv1.2 (OUT), TLS header, Supplemental data (23):\n#19 0.567 } [5 bytes data]\n#19 0.567 \n100    50  100    50    0     0    269      0 --:--:-- --:--:-- --:--:--   270\n#19 0.567 * Connection #0 to host golang.org left intact\n#19 0.567 <a href=\"https://go.dev/\">Moved Permanently</a>.\n#19 0.567 \n#19 DONE 0.6s\n\n#20 [14/20] RUN ping -c 3 proxy.golang.org || echo \"Warning: Cannot reach proxy.golang.org\"\n#20 0.412 PING proxy.golang.org (173.194.219.141) 56(84) bytes of data.\n#20 0.412 64 bytes from ya-in-f141.1e100.net (173.194.219.141): icmp_seq=1 ttl=104 time=20.0 ms\n#20 1.413 64 bytes from ya-in-f141.1e100.net (173.194.219.141): icmp_seq=2 ttl=104 time=20.0 ms\n#20 2.414 64 bytes from ya-in-f141.1e100.net (173.194.219.141): icmp_seq=3 ttl=104 time=20.0 ms\n#20 2.414 \n#20 2.414 --- proxy.golang.org ping statistics ---\n#20 2.414 3 packets transmitted, 3 received, 0% packet loss, time 2003ms\n#20 2.414 rtt min/avg/max/mdev = 19.974/19.983/19.995/0.008 ms\n#20 DONE 2.4s\n\n#21 [15/20] RUN ping -c 3 golang.org || echo \"Warning: Cannot reach golang.org\"\n#21 0.447 PING golang.org (64.233.176.141) 56(84) bytes of data.\n#21 0.447 64 bytes from yw-in-f141.1e100.net (64.233.176.141): icmp_seq=1 ttl=104 time=20.0 ms\n#21 1.448 64 bytes from yw-in-f141.1e100.net (64.233.176.141): icmp_seq=2 ttl=104 time=20.0 ms\n#21 2.450 64 bytes from yw-in-f141.1e100.net (64.233.176.141): icmp_seq=3 ttl=104 time=20.0 ms\n#21 2.450 \n#21 2.450 --- golang.org ping statistics ---\n#21 2.450 3 packets transmitted, 3 received, 0% packet loss, time 2002ms\n#21 2.450 rtt min/avg/max/mdev = 19.991/20.002/20.013/0.009 ms\n#21 DONE 2.5s\n\n#22 [16/20] RUN set -eux;     for i in 1 2 3 4 5; do       GOPROXY=https://proxy.golang.org,direct go mod download -x && break || (echo \"go mod download failed, attempt $$i\"; go env; curl -v https://proxy.golang.org || true; sleep 5);     done\n#22 0.343 + GOPROXY=https://proxy.golang.org,direct go mod download -x\n#22 0.345 go: go: could not create module cache: mkdir /go: permission denied\n#22 0.346 + echo go mod download failed, attempt 1i\n#22 0.346 + go env\n#22 0.346 go mod download failed, attempt 1i\n#22 0.349 go: go: could not create module cache: mkdir /go: permission denied\n#22 ERROR: process \"/bin/sh -c set -eux;     for i in 1 2 3 4 5; do       GOPROXY=https://proxy.golang.org,direct go mod download -x && break || (echo \\\"go mod download failed, attempt $$i\\\"; go env; curl -v https://proxy.golang.org || true; sleep 5);     done\" did not complete successfully: exit code: 1\n------\n > [16/20] RUN set -eux;     for i in 1 2 3 4 5; do       GOPROXY=https://proxy.golang.org,direct go mod download -x && break || (echo \"go mod download failed, attempt $$i\"; go env; curl -v https://proxy.golang.org || true; sleep 5);     done:\n0.343 + GOPROXY=https://proxy.golang.org,direct go mod download -x\n0.345 go: go: could not create module cache: mkdir /go: permission denied\n0.346 + echo go mod download failed, attempt 1i\n0.346 + go env\n0.346 go mod download failed, attempt 1i\n0.349 go: go: could not create module cache: mkdir /go: permission denied\n------\nERROR: failed to build: failed to solve: process \"/bin/sh -c set -eux;     for i in 1 2 3 4 5; do       GOPROXY=https://proxy.golang.org,direct go mod download -x && break || (echo \\\"go mod download failed, attempt $$i\\\"; go env; curl -v https://proxy.golang.org || true; sleep 5);     done\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}