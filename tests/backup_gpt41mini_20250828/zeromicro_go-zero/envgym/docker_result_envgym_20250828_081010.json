{
  "timestamp": "20250828_081010",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756368609",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 489B done\n#1 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/golang:1.20\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 111B done\n#3 DONE 0.0s\n\n#4 [ 1/10] FROM docker.io/library/golang:1.20@sha256:8f9af7094d0cb27cc783c697ac5ba25efdc4da35f8526db21f7aebb0b0b4f18a\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 176.74kB 0.1s done\n#5 DONE 0.1s\n\n#6 [ 2/10] RUN apt-get update && apt-get install -y --no-install-recommends     bash     ca-certificates     git     build-essential     && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [ 3/10] WORKDIR /home/cc/EnvGym/data-gpt-4.1mini/zeromicro_go-zero\n#7 CACHED\n\n#8 [ 4/10] COPY go.mod go.sum ./\n#8 CACHED\n\n#9 [ 5/10] RUN go mod download\n#9 CACHED\n\n#10 [ 6/10] COPY . .\n#10 DONE 0.2s\n\n#11 [ 7/10] RUN go version\n#11 0.192 go version go1.20.14 linux/amd64\n#11 DONE 0.2s\n\n#12 [ 8/10] RUN go env\n#12 0.487 GO111MODULE=\"\"\n#12 0.487 GOARCH=\"amd64\"\n#12 0.487 GOBIN=\"\"\n#12 0.487 GOCACHE=\"/root/.cache/go-build\"\n#12 0.487 GOENV=\"/root/.config/go/env\"\n#12 0.487 GOEXE=\"\"\n#12 0.487 GOEXPERIMENT=\"\"\n#12 0.487 GOFLAGS=\"\"\n#12 0.487 GOHOSTARCH=\"amd64\"\n#12 0.487 GOHOSTOS=\"linux\"\n#12 0.487 GOINSECURE=\"\"\n#12 0.487 GOMODCACHE=\"/go/pkg/mod\"\n#12 0.487 GONOPROXY=\"\"\n#12 0.487 GONOSUMDB=\"\"\n#12 0.487 GOOS=\"linux\"\n#12 0.487 GOPATH=\"/go\"\n#12 0.487 GOPRIVATE=\"\"\n#12 0.487 GOPROXY=\"https://proxy.golang.org,direct\"\n#12 0.487 GOROOT=\"/usr/local/go\"\n#12 0.487 GOSUMDB=\"sum.golang.org\"\n#12 0.487 GOTMPDIR=\"\"\n#12 0.487 GOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\n#12 0.487 GOVCS=\"\"\n#12 0.487 GOVERSION=\"go1.20.14\"\n#12 0.487 GCCGO=\"gccgo\"\n#12 0.487 GOAMD64=\"v1\"\n#12 0.487 AR=\"ar\"\n#12 0.487 CC=\"gcc\"\n#12 0.487 CXX=\"g++\"\n#12 0.487 CGO_ENABLED=\"1\"\n#12 0.487 GOMOD=\"/home/cc/EnvGym/data-gpt-4.1mini/zeromicro_go-zero/go.mod\"\n#12 0.487 GOWORK=\"\"\n#12 0.487 CGO_CFLAGS=\"-O2 -g\"\n#12 0.487 CGO_CPPFLAGS=\"\"\n#12 0.487 CGO_CXXFLAGS=\"-O2 -g\"\n#12 0.487 CGO_FFLAGS=\"-O2 -g\"\n#12 0.487 CGO_LDFLAGS=\"-O2 -g\"\n#12 0.487 PKG_CONFIG=\"pkg-config\"\n#12 0.487 GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3167314206=/tmp/go-build -gno-record-gcc-switches\"\n#12 DONE 0.5s\n\n#13 [ 9/10] RUN go mod tidy -v\n#13 0.363 go: go.mod file indicates go 1.21, but maximum version supported by tidy is 1.20\n#13 ERROR: process \"/bin/sh -c go mod tidy -v\" did not complete successfully: exit code: 1\n------\n > [ 9/10] RUN go mod tidy -v:\n0.363 go: go.mod file indicates go 1.21, but maximum version supported by tidy is 1.20\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\nenvgym.dockerfile:21\n--------------------\n  19 |     RUN go version\n  20 |     RUN go env\n  21 | >>> RUN go mod tidy -v\n  22 |     RUN go build -v ./...\n  23 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c go mod tidy -v\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}