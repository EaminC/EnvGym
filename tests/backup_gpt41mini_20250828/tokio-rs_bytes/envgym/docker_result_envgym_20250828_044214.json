{
  "timestamp": "20250828_044214",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1756356130",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.62kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:22.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [internal] load build context\n#4 DONE 0.0s\n\n#5 [ 1/27] FROM docker.io/library/ubuntu:22.04@sha256:1aa979d85661c488ce030ac292876cf6ed04535d3a237e49f61542d8e5de5ae0\n#5 DONE 0.0s\n\n#6 [ 2/27] RUN apt-get update && apt-get install -y --no-install-recommends     curl     git     build-essential     ca-certificates     pkg-config     libssl-dev     llvm     clang     cmake     && rm -rf /var/lib/apt/lists/*\n#6 CACHED\n\n#7 [ 6/27] RUN useradd -m cc\n#7 CACHED\n\n#8 [ 5/27] RUN rustc --version && cargo --version && rustc +nightly --version\n#8 CACHED\n\n#9 [ 8/27] RUN chown -R cc:cc /home/cc\n#9 CACHED\n\n#10 [ 3/27] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable\n#10 CACHED\n\n#11 [ 7/27] WORKDIR /home/cc/tokio-rs_bytes\n#11 CACHED\n\n#12 [ 4/27] RUN rustup install nightly\n#12 CACHED\n\n#13 [ 9/27] WORKDIR /home/cc/tokio-rs_bytes\n#13 CACHED\n\n#4 [internal] load build context\n#4 transferring context: 1.74kB done\n#4 DONE 0.0s\n\n#14 [10/27] COPY --chown=cc:cc Cargo.toml Cargo.toml\n#14 DONE 0.0s\n\n#15 [11/27] COPY --chown=cc:cc src src\n#15 DONE 0.0s\n\n#16 [12/27] COPY --chown=cc:cc benches benches\n#16 DONE 0.0s\n\n#17 [13/27] COPY --chown=cc:cc ci ci\n#17 DONE 0.0s\n\n#18 [14/27] COPY --chown=cc:cc tests tests\n#18 DONE 0.0s\n\n#19 [15/27] COPY --chown=cc:cc clippy.toml clippy.toml\n#19 DONE 0.0s\n\n#20 [16/27] COPY --chown=cc:cc CHANGELOG.md CHANGELOG.md\n#20 DONE 0.0s\n\n#21 [17/27] COPY --chown=cc:cc LICENSE LICENSE\n#21 DONE 0.0s\n\n#22 [18/27] COPY --chown=cc:cc README.md README.md\n#22 DONE 0.0s\n\n#23 [19/27] COPY --chown=cc:cc SECURITY.md SECURITY.md\n#23 DONE 0.0s\n\n#24 [20/27] RUN echo 'msrv = \"1.57\"' > clippy.toml\n#24 DONE 0.2s\n\n#25 [21/27] RUN mkdir -p .cargo && echo -e '[build]\\nrustflags = [\"--cfg\", \"docsrs\"]' > .cargo/config.toml\n#25 DONE 0.4s\n\n#26 [22/27] RUN cargo update\n#26 0.425     Updating crates.io index\n#26 0.521 warning: failed to write cache, path: /usr/local/cargo/registry/index/index.crates.io-1949cf8c6b5b557f/.cache/po/rt/portable-atomic, error: Permission denied (os error 13)\n#26 0.639      Locking 52 packages to latest compatible versions\n#26 DONE 0.7s\n\n#27 [23/27] RUN cargo clean\n#27 0.495      Removed 0 files\n#27 DONE 0.5s\n\n#28 [24/27] RUN set -eux;     cargo check --verbose 2>&1 | tee target/cargo-check.log || (cat target/cargo-check.log && false)\n#28 0.405 + cargo check --verbose\n#28 0.405 + tee target/cargo-check.log\n#28 0.407 tee: target/cargo-check.log: No such file or directory\n#28 0.490     Updating crates.io index\n#28 0.560 warning: failed to write cache, path: /usr/local/cargo/registry/index/index.crates.io-1949cf8c6b5b557f/.cache/po/rt/portable-atomic, error: Permission denied (os error 13)\n#28 0.692 warning: failed to save last-use data\n#28 0.692 This may prevent cargo from accurately tracking what is being used in its global cache. This information is used for automatically removing unused data in the cache.\n#28 0.692 \n#28 0.692 unable to open database file: /usr/local/cargo/.global-cache\n#28 0.692 \n#28 0.692 Caused by:\n#28 0.692   Error code 14: Unable to open the database file\n#28 0.707     Checking bytes v1.10.1 (/home/cc/tokio-rs_bytes)\n#28 0.708      Running `/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name bytes --edition=2021 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --warn=unexpected_cfgs --check-cfg 'cfg(loom)' --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"default\", \"extra-platforms\", \"serde\", \"std\"))' -C metadata=dffc8780ad2560d2 -C extra-filename=-e3210c79f383e177 --out-dir /home/cc/tokio-rs_bytes/target/debug/deps -C incremental=/home/cc/tokio-rs_bytes/target/debug/incremental -L dependency=/home/cc/tokio-rs_bytes/target/debug/deps --cfg docsrs`\n#28 0.762 error[E0554]: `#![feature]` may not be used on the stable release channel\n#28 0.762  --> src/lib.rs:7:21\n#28 0.762   |\n#28 0.762 7 | #![cfg_attr(docsrs, feature(doc_cfg))]\n#28 0.762   |                     ^^^^^^^^^^^^^^^^\n#28 0.762 \n#28 1.096 For more information about this error, try `rustc --explain E0554`.\n#28 1.102 error: could not compile `bytes` (lib) due to 1 previous error\n#28 1.102 \n#28 1.102 Caused by:\n#28 1.102   process didn't exit successfully: `/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name bytes --edition=2021 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --warn=unexpected_cfgs --check-cfg 'cfg(loom)' --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"default\", \"extra-platforms\", \"serde\", \"std\"))' -C metadata=dffc8780ad2560d2 -C extra-filename=-e3210c79f383e177 --out-dir /home/cc/tokio-rs_bytes/target/debug/deps -C incremental=/home/cc/tokio-rs_bytes/target/debug/incremental -L dependency=/home/cc/tokio-rs_bytes/target/debug/deps --cfg docsrs` (exit status: 1)\n#28 1.132 + cat target/cargo-check.log\n#28 1.133 cat: target/cargo-check.log: No such file or directory\n#28 ERROR: process \"/bin/bash -c set -eux;     cargo check --verbose 2>&1 | tee target/cargo-check.log || (cat target/cargo-check.log && false)\" did not complete successfully: exit code: 1\n------\n > [24/27] RUN set -eux;     cargo check --verbose 2>&1 | tee target/cargo-check.log || (cat target/cargo-check.log && false):\n0.762 7 | #![cfg_attr(docsrs, feature(doc_cfg))]\n0.762   |                     ^^^^^^^^^^^^^^^^\n0.762 \n1.096 For more information about this error, try `rustc --explain E0554`.\n1.102 error: could not compile `bytes` (lib) due to 1 previous error\n1.102 \n1.102 Caused by:\n1.102   process didn't exit successfully: `/usr/local/rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name bytes --edition=2021 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --warn=unexpected_cfgs --check-cfg 'cfg(loom)' --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"default\", \"extra-platforms\", \"serde\", \"std\"))' -C metadata=dffc8780ad2560d2 -C extra-filename=-e3210c79f383e177 --out-dir /home/cc/tokio-rs_bytes/target/debug/deps -C incremental=/home/cc/tokio-rs_bytes/target/debug/incremental -L dependency=/home/cc/tokio-rs_bytes/target/debug/deps --cfg docsrs` (exit status: 1)\n1.132 + cat target/cargo-check.log\n1.133 cat: target/cargo-check.log: No such file or directory\n------\nenvgym.dockerfile:57\n--------------------\n  56 |     \n  57 | >>> RUN set -eux; \\\n  58 | >>>     cargo check --verbose 2>&1 | tee target/cargo-check.log || (cat target/cargo-check.log && false)\n  59 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/bash -c set -eux;     cargo check --verbose 2>&1 | tee target/cargo-check.log || (cat target/cargo-check.log && false)\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}