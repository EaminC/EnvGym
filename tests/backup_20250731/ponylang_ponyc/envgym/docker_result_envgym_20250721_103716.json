{
  "timestamp": "20250721_103716",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753094235",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 1.69kB done\n#1 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:24.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [1/7] FROM docker.io/library/ubuntu:24.04@sha256:a08e551cb33850e4740772b38217fc1796a66da2506d312abe51acda354ff061\n#4 DONE 0.0s\n\n#5 [2/7] RUN apt-get update &&     apt-get install -y --no-install-recommends       clang       curl       g++       git       lsb-release       make       ca-certificates       python3       python3-pip       lldb       cmake &&     rm -rf /var/lib/apt/lists/*\n#5 CACHED\n\n#6 [3/7] RUN curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/ponylang/ponyup/latest/ponyup-init.sh | bash\n#6 CACHED\n\n#7 [internal] load build context\n#7 transferring context: 208.15kB 0.0s done\n#7 DONE 0.1s\n\n#8 [4/7] RUN set -x &&     ls -l /root/.local/share/ponyup/ &&     ls -l /root/.local/share/ponyup/bin || true &&     cat /root/.bashrc || true\n#8 0.194 + ls -l /root/.local/share/ponyup/\n#8 0.195 ls: cannot access '/root/.local/share/ponyup/': No such file or directory\n#8 0.195 + true\n#8 0.195 + cat /root/.bashrc\n#8 0.195 # ~/.bashrc: executed by bash(1) for non-login shells.\n#8 0.195 # see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\n#8 0.195 # for examples\n#8 0.195 \n#8 0.195 # If not running interactively, don't do anything\n#8 0.195 [ -z \"$PS1\" ] && return\n#8 0.195 \n#8 0.195 # don't put duplicate lines in the history. See bash(1) for more options\n#8 0.195 # ... or force ignoredups and ignorespace\n#8 0.195 HISTCONTROL=ignoredups:ignorespace\n#8 0.195 \n#8 0.195 # append to the history file, don't overwrite it\n#8 0.195 shopt -s histappend\n#8 0.195 \n#8 0.195 # for setting history length see HISTSIZE and HISTFILESIZE in bash(1)\n#8 0.195 HISTSIZE=1000\n#8 0.195 HISTFILESIZE=2000\n#8 0.195 \n#8 0.195 # check the window size after each command and, if necessary,\n#8 0.195 # update the values of LINES and COLUMNS.\n#8 0.195 shopt -s checkwinsize\n#8 0.195 \n#8 0.195 # make less more friendly for non-text input files, see lesspipe(1)\n#8 0.195 [ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\n#8 0.195 \n#8 0.195 # set variable identifying the chroot you work in (used in the prompt below)\n#8 0.195 if [ -z \"$debian_chroot\" ] && [ -r /etc/debian_chroot ]; then\n#8 0.195     debian_chroot=$(cat /etc/debian_chroot)\n#8 0.195 fi\n#8 0.195 \n#8 0.195 # set a fancy prompt (non-color, unless we know we \"want\" color)\n#8 0.195 case \"$TERM\" in\n#8 0.195     xterm-color) color_prompt=yes;;\n#8 0.195 esac\n#8 0.195 \n#8 0.195 # uncomment for a colored prompt, if the terminal has the capability; turned\n#8 0.195 # off by default to not distract the user: the focus in a terminal window\n#8 0.195 # should be on the output of commands, not on the prompt\n#8 0.195 #force_color_prompt=yes\n#8 0.195 \n#8 0.195 if [ -n \"$force_color_prompt\" ]; then\n#8 0.195     if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\n#8 0.195 \t# We have color support; assume it's compliant with Ecma-48\n#8 0.195 \t# (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n#8 0.195 \t# a case would tend to support setf rather than setaf.)\n#8 0.195 \tcolor_prompt=yes\n#8 0.195     else\n#8 0.195 \tcolor_prompt=\n#8 0.195     fi\n#8 0.195 fi\n#8 0.195 \n#8 0.195 if [ \"$color_prompt\" = yes ]; then\n#8 0.195     PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '\n#8 0.195 else\n#8 0.195     PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\n#8 0.195 fi\n#8 0.195 unset color_prompt force_color_prompt\n#8 0.195 \n#8 0.195 # If this is an xterm set the title to user@host:dir\n#8 0.195 case \"$TERM\" in\n#8 0.195 xterm*|rxvt*)\n#8 0.195     PS1=\"\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\"\n#8 0.195     ;;\n#8 0.195 *)\n#8 0.195     ;;\n#8 0.195 esac\n#8 0.195 \n#8 0.195 # enable color support of ls and also add handy aliases\n#8 0.195 if [ -x /usr/bin/dircolors ]; then\n#8 0.195     test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n#8 0.195     alias ls='ls --color=auto'\n#8 0.195     #alias dir='dir --color=auto'\n#8 0.195     #alias vdir='vdir --color=auto'\n#8 0.195 \n#8 0.195     alias grep='grep --color=auto'\n#8 0.195     alias fgrep='fgrep --color=auto'\n#8 0.195     alias egrep='egrep --color=auto'\n#8 0.195 fi\n#8 0.195 \n#8 0.195 # some more ls aliases\n#8 0.195 alias ll='ls -alF'\n#8 0.195 alias la='ls -A'\n#8 0.195 alias l='ls -CF'\n#8 0.195 \n#8 0.195 # Alias definitions.\n#8 0.195 # You may want to put all your additions into a separate file like\n#8 0.195 # ~/.bash_aliases, instead of adding them here directly.\n#8 0.195 # See /usr/share/doc/bash-doc/examples in the bash-doc package.\n#8 0.195 \n#8 0.195 if [ -f ~/.bash_aliases ]; then\n#8 0.195     . ~/.bash_aliases\n#8 0.195 fi\n#8 0.195 \n#8 0.195 # enable programmable completion features (you don't need to enable\n#8 0.195 # this, if it's already enabled in /etc/bash.bashrc and /etc/profile\n#8 0.195 # sources /etc/bash.bashrc).\n#8 0.195 #if [ -f /etc/bash_completion ] && ! shopt -oq posix; then\n#8 0.195 #    . /etc/bash_completion\n#8 0.195 #fi\n#8 DONE 0.2s\n\n#9 [5/7] RUN python3 -m pip install --no-cache-dir cloudsmith-cli mkdocs\n#9 0.630 error: externally-managed-environment\n#9 0.630 \n#9 0.630 × This environment is externally managed\n#9 0.630 ╰─> To install Python packages system-wide, try apt install\n#9 0.630     python3-xyz, where xyz is the package you are trying to\n#9 0.630     install.\n#9 0.630     \n#9 0.630     If you wish to install a non-Debian-packaged Python package,\n#9 0.630     create a virtual environment using python3 -m venv path/to/venv.\n#9 0.630     Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n#9 0.630     sure you have python3-full installed.\n#9 0.630     \n#9 0.630     If you wish to install a non-Debian packaged Python application,\n#9 0.630     it may be easiest to use pipx install xyz, which will manage a\n#9 0.630     virtual environment for you. Make sure you have pipx installed.\n#9 0.630     \n#9 0.630     See /usr/share/doc/python3.12/README.venv for more information.\n#9 0.630 \n#9 0.630 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n#9 0.630 hint: See PEP 668 for the detailed specification.\n#9 ERROR: process \"/bin/sh -c python3 -m pip install --no-cache-dir cloudsmith-cli mkdocs\" did not complete successfully: exit code: 1\n------\n > [5/7] RUN python3 -m pip install --no-cache-dir cloudsmith-cli mkdocs:\n0.630     sure you have python3-full installed.\n0.630     \n0.630     If you wish to install a non-Debian packaged Python application,\n0.630     it may be easiest to use pipx install xyz, which will manage a\n0.630     virtual environment for you. Make sure you have pipx installed.\n0.630     \n0.630     See /usr/share/doc/python3.12/README.venv for more information.\n0.630 \n0.630 note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\n0.630 hint: See PEP 668 for the detailed specification.\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\nenvgym.dockerfile:46\n--------------------\n  44 |     \n  45 |     # Optionally install cloudsmith-cli and mkdocs for docs/tooling\n  46 | >>> RUN python3 -m pip install --no-cache-dir cloudsmith-cli mkdocs\n  47 |     \n  48 |     # Set workdir and copy repo\n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c python3 -m pip install --no-cache-dir cloudsmith-cli mkdocs\" did not complete successfully: exit code: 1\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}