{
  "timestamp": "20250721_104600",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753094759",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 4.02kB done\n#1 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/ubuntu:24.04\n#2 DONE 0.1s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 2B done\n#3 DONE 0.0s\n\n#4 [ 1/15] FROM docker.io/library/ubuntu:24.04@sha256:a08e551cb33850e4740772b38217fc1796a66da2506d312abe51acda354ff061\n#4 DONE 0.0s\n\n#5 [ 3/15] RUN ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime && dpkg-reconfigure -f noninteractive tzdata\n#5 CACHED\n\n#6 [ 5/15] RUN apt-get update &&     apt-get install -y --no-install-recommends libc6\n#6 CACHED\n\n#7 [ 2/15] RUN apt-get update &&     apt-get install -y --no-install-recommends       ca-certificates       tzdata     && rm -rf /var/lib/apt/lists/*\n#7 CACHED\n\n#8 [ 4/15] RUN apt-get update &&     apt-get install -y --no-install-recommends       clang       curl       g++       git       make       python3       python3-pip       python3-venv       build-essential       cmake       tar       xz-utils       libssl3       libcurl4       zlib1g       libzstd1       liblzma5       libgssapi-krb5-2       libkrb5-3       lsb-release       lldb       bash       coreutils     && rm -rf /var/lib/apt/lists/*\n#8 CACHED\n\n#9 [ 6/15] RUN echo \"=== System diagnostics ===\" &&     lsb_release -a || true &&     uname -a &&     date &&     echo \"ca-certificates version:\" && apt-cache policy ca-certificates &&     echo \"curl version:\" && curl --version &&     echo \"clang version:\" && clang --version &&     echo \"g++ version:\" && g++ --version &&     echo \"tar version:\" && tar --version &&     echo \"xz-utils version:\" && xz --version &&     echo \"bash version:\" && bash --version\n#9 CACHED\n\n#10 [internal] load build context\n#10 transferring context: 1.26MB 0.1s done\n#10 DONE 0.1s\n\n#11 [ 7/15] RUN set -euo pipefail &&     echo \"==== Downloading pinned ponyup-init.sh ====\" &&     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/${PONYUP_INIT_COMMIT}/ponyup-init.sh &&     echo \"==== ponyup-init.sh contents ====\" && head -40 /tmp/ponyup-init.sh &&     echo \"==== Checking file type of ponyup-init.sh ====\" && file /tmp/ponyup-init.sh &&     chmod +x /tmp/ponyup-init.sh &&     echo \"==== Checking if bash, curl, and coreutils are present ====\" &&     bash --version &&     curl --version &&     ls --version &&     export HOME=\"/root\" &&     export USER=\"root\" &&     echo \"HOME is: $HOME\" &&     mkdir -p /root/.local/share/ponyup &&     ls -ld /root/.local/share/ponyup &&     echo \"==== Running ponyup-init.sh (diagnostic run, full output below) ====\" &&     bash -x /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ;     EXITCODE=${PIPESTATUS[0]:-0} ;     echo \"==== ponyup install log (first 100 lines) ====\" && head -100 /tmp/ponyup-install.log || true &&     echo \"==== ponyup install log (last 100 lines) ====\" && tail -100 /tmp/ponyup-install.log || true &&     cat /tmp/ponyup-install.log || true &&     if [ \"$EXITCODE\" -ne 0 ]; then echo \"ponyup-init.sh failed, see log above\"; exit \"$EXITCODE\"; fi &&     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then echo \"ponyup binary not found after install (install failed or path changed)\"; ls -lR /root/.local/share/ponyup || true; exit 2; fi\n#11 0.194 /bin/sh: 1: set: Illegal option -o pipefail\n#11 ERROR: process \"/bin/sh -c set -euo pipefail &&     echo \\\"==== Downloading pinned ponyup-init.sh ====\\\" &&     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/${PONYUP_INIT_COMMIT}/ponyup-init.sh &&     echo \\\"==== ponyup-init.sh contents ====\\\" && head -40 /tmp/ponyup-init.sh &&     echo \\\"==== Checking file type of ponyup-init.sh ====\\\" && file /tmp/ponyup-init.sh &&     chmod +x /tmp/ponyup-init.sh &&     echo \\\"==== Checking if bash, curl, and coreutils are present ====\\\" &&     bash --version &&     curl --version &&     ls --version &&     export HOME=\\\"/root\\\" &&     export USER=\\\"root\\\" &&     echo \\\"HOME is: $HOME\\\" &&     mkdir -p /root/.local/share/ponyup &&     ls -ld /root/.local/share/ponyup &&     echo \\\"==== Running ponyup-init.sh (diagnostic run, full output below) ====\\\" &&     bash -x /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ;     EXITCODE=${PIPESTATUS[0]:-0} ;     echo \\\"==== ponyup install log (first 100 lines) ====\\\" && head -100 /tmp/ponyup-install.log || true &&     echo \\\"==== ponyup install log (last 100 lines) ====\\\" && tail -100 /tmp/ponyup-install.log || true &&     cat /tmp/ponyup-install.log || true &&     if [ \\\"$EXITCODE\\\" -ne 0 ]; then echo \\\"ponyup-init.sh failed, see log above\\\"; exit \\\"$EXITCODE\\\"; fi &&     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then echo \\\"ponyup binary not found after install (install failed or path changed)\\\"; ls -lR /root/.local/share/ponyup || true; exit 2; fi\" did not complete successfully: exit code: 2\n------\n > [ 7/15] RUN set -euo pipefail &&     echo \"==== Downloading pinned ponyup-init.sh ====\" &&     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/${PONYUP_INIT_COMMIT}/ponyup-init.sh &&     echo \"==== ponyup-init.sh contents ====\" && head -40 /tmp/ponyup-init.sh &&     echo \"==== Checking file type of ponyup-init.sh ====\" && file /tmp/ponyup-init.sh &&     chmod +x /tmp/ponyup-init.sh &&     echo \"==== Checking if bash, curl, and coreutils are present ====\" &&     bash --version &&     curl --version &&     ls --version &&     export HOME=\"/root\" &&     export USER=\"root\" &&     echo \"HOME is: $HOME\" &&     mkdir -p /root/.local/share/ponyup &&     ls -ld /root/.local/share/ponyup &&     echo \"==== Running ponyup-init.sh (diagnostic run, full output below) ====\" &&     bash -x /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ;     EXITCODE=${PIPESTATUS[0]:-0} ;     echo \"==== ponyup install log (first 100 lines) ====\" && head -100 /tmp/ponyup-install.log || true &&     echo \"==== ponyup install log (last 100 lines) ====\" && tail -100 /tmp/ponyup-install.log || true &&     cat /tmp/ponyup-install.log || true &&     if [ \"$EXITCODE\" -ne 0 ]; then echo \"ponyup-init.sh failed, see log above\"; exit \"$EXITCODE\"; fi &&     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then echo \"ponyup binary not found after install (install failed or path changed)\"; ls -lR /root/.local/share/ponyup || true; exit 2; fi:\n0.194 /bin/sh: 1: set: Illegal option -o pipefail\n------\n\n \u001b[33m1 warning found (use docker --debug to expand):\n\u001b[0m - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value \"linux/amd64\" (line 1)\nenvgym.dockerfile:61\n--------------------\n  60 |     \n  61 | >>> RUN set -euo pipefail && \\\n  62 | >>>     echo \"==== Downloading pinned ponyup-init.sh ====\" && \\\n  63 | >>>     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/${PONYUP_INIT_COMMIT}/ponyup-init.sh && \\\n  64 | >>>     echo \"==== ponyup-init.sh contents ====\" && head -40 /tmp/ponyup-init.sh && \\\n  65 | >>>     echo \"==== Checking file type of ponyup-init.sh ====\" && file /tmp/ponyup-init.sh && \\\n  66 | >>>     chmod +x /tmp/ponyup-init.sh && \\\n  67 | >>>     echo \"==== Checking if bash, curl, and coreutils are present ====\" && \\\n  68 | >>>     bash --version && \\\n  69 | >>>     curl --version && \\\n  70 | >>>     ls --version && \\\n  71 | >>>     export HOME=\"/root\" && \\\n  72 | >>>     export USER=\"root\" && \\\n  73 | >>>     echo \"HOME is: $HOME\" && \\\n  74 | >>>     mkdir -p /root/.local/share/ponyup && \\\n  75 | >>>     ls -ld /root/.local/share/ponyup && \\\n  76 | >>>     echo \"==== Running ponyup-init.sh (diagnostic run, full output below) ====\" && \\\n  77 | >>>     bash -x /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ; \\\n  78 | >>>     EXITCODE=${PIPESTATUS[0]:-0} ; \\\n  79 | >>>     echo \"==== ponyup install log (first 100 lines) ====\" && head -100 /tmp/ponyup-install.log || true && \\\n  80 | >>>     echo \"==== ponyup install log (last 100 lines) ====\" && tail -100 /tmp/ponyup-install.log || true && \\\n  81 | >>>     cat /tmp/ponyup-install.log || true && \\\n  82 | >>>     if [ \"$EXITCODE\" -ne 0 ]; then echo \"ponyup-init.sh failed, see log above\"; exit \"$EXITCODE\"; fi && \\\n  83 | >>>     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then echo \"ponyup binary not found after install (install failed or path changed)\"; ls -lR /root/.local/share/ponyup || true; exit 2; fi\n  84 |     \n--------------------\nERROR: failed to build: failed to solve: process \"/bin/sh -c set -euo pipefail &&     echo \\\"==== Downloading pinned ponyup-init.sh ====\\\" &&     curl --proto '=https' --tlsv1.2 -fsSL -o /tmp/ponyup-init.sh https://raw.githubusercontent.com/ponylang/ponyup/${PONYUP_INIT_COMMIT}/ponyup-init.sh &&     echo \\\"==== ponyup-init.sh contents ====\\\" && head -40 /tmp/ponyup-init.sh &&     echo \\\"==== Checking file type of ponyup-init.sh ====\\\" && file /tmp/ponyup-init.sh &&     chmod +x /tmp/ponyup-init.sh &&     echo \\\"==== Checking if bash, curl, and coreutils are present ====\\\" &&     bash --version &&     curl --version &&     ls --version &&     export HOME=\\\"/root\\\" &&     export USER=\\\"root\\\" &&     echo \\\"HOME is: $HOME\\\" &&     mkdir -p /root/.local/share/ponyup &&     ls -ld /root/.local/share/ponyup &&     echo \\\"==== Running ponyup-init.sh (diagnostic run, full output below) ====\\\" &&     bash -x /tmp/ponyup-init.sh 2>&1 | tee /tmp/ponyup-install.log ;     EXITCODE=${PIPESTATUS[0]:-0} ;     echo \\\"==== ponyup install log (first 100 lines) ====\\\" && head -100 /tmp/ponyup-install.log || true &&     echo \\\"==== ponyup install log (last 100 lines) ====\\\" && tail -100 /tmp/ponyup-install.log || true &&     cat /tmp/ponyup-install.log || true &&     if [ \\\"$EXITCODE\\\" -ne 0 ]; then echo \\\"ponyup-init.sh failed, see log above\\\"; exit \\\"$EXITCODE\\\"; fi &&     if [ ! -f /root/.local/share/ponyup/bin/ponyup ]; then echo \\\"ponyup binary not found after install (install failed or path changed)\\\"; ls -lR /root/.local/share/ponyup || true; exit 2; fi\" did not complete successfully: exit code: 2\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}