{
  "timestamp": "20250721_015841",
  "dockerfile_path": "envgym/envgym.dockerfile",
  "image_name": "envgym_test_1753063096",
  "build": {
    "success": false,
    "stdout": "",
    "stderr": "#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from envgym.dockerfile\n#1 transferring dockerfile: 2.13kB done\n#1 DONE 0.0s\n\n#2 resolve image config for docker-image://docker.io/docker/dockerfile:1.4\n#2 DONE 0.1s\n\n#3 docker-image://docker.io/docker/dockerfile:1.4@sha256:9ba7531bd80fb0a858632727cf7a112fbfd19b17e94c4e84ced81e24ef1a0dbc\n#3 CACHED\n\n#4 [internal] load .dockerignore\n#4 transferring context: 2B done\n#4 DONE 0.0s\n\n#5 [internal] load metadata for docker.io/library/ubuntu:22.04\n#5 DONE 0.1s\n\n#6 [ 1/11] FROM docker.io/library/ubuntu:22.04@sha256:1ec65b2719518e27d4d25f104d93f9fac60dc437f81452302406825c46fcc9cb\n#6 DONE 0.0s\n\n#7 [ 2/11] RUN apt-get update &&     apt-get install -y --no-install-recommends         build-essential         libssl-dev         pkg-config         perl         clang         dpkg         git         wget         ca-certificates         curl         software-properties-common         bash         locales     && rm -rf /var/lib/apt/lists/*\n#7 CACHED\n\n#8 [ 3/11] RUN locale-gen en_US.UTF-8\n#8 CACHED\n\n#9 [internal] load build context\n#9 transferring context: 344.48kB 0.1s done\n#9 DONE 0.1s\n\n#10 [ 4/11] RUN ARCH=x86_64-unknown-linux-gnu &&     wget -q https://github.com/nushell/nushell/releases/download/0.92.1/nu-0.92.1-${ARCH}.tar.gz &&     tar -xzf nu-0.92.1-${ARCH}.tar.gz &&     mv nu-0.92.1-${ARCH}/nu /usr/local/bin/ &&     chmod +x /usr/local/bin/nu &&     rm -rf nu-0.92.1-${ARCH}*\n#10 DONE 1.9s\n\n#11 [ 5/11] RUN nu --version\n#11 0.297 0.92.1\n#11 DONE 0.3s\n\n#12 [ 6/11] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &&     . /root/.cargo/env &&     rustup toolchain install 1.86.0 &&     rustup default 1.86.0\n#12 0.508 info: downloading installer\n#12 1.632 info: profile set to 'default'\n#12 1.632 info: default host triple is x86_64-unknown-linux-gnu\n#12 1.632 info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n#12 1.763 info: latest update on 2025-06-26, rust version 1.88.0 (6b00bc388 2025-06-23)\n#12 1.763 info: downloading component 'cargo'\n#12 2.339 info: downloading component 'clippy'\n#12 2.454 info: downloading component 'rust-docs'\n#12 2.658 info: downloading component 'rust-std'\n#12 3.059 info: downloading component 'rustc'\n#12 6.121 info: downloading component 'rustfmt'\n#12 6.259 info: installing component 'cargo'\n#12 7.135 info: installing component 'clippy'\n#12 7.488 info: installing component 'rust-docs'\n#12 9.609 info: installing component 'rust-std'\n#12 12.25 info: installing component 'rustc'\n#12 18.38 info: installing component 'rustfmt'\n#12 18.77 info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n#12 18.77 \n#12 18.78   stable-x86_64-unknown-linux-gnu installed - rustc 1.88.0 (6b00bc388 2025-06-23)\n#12 18.78 \n#12 18.78 \n#12 18.78 Rust is installed now. Great!\n#12 18.78 \n#12 18.78 To get started you may need to restart your current shell.\n#12 18.78 This would reload your PATH environment variable to include\n#12 18.78 Cargo's bin directory (/usr/local/cargo/bin).\n#12 18.78 \n#12 18.78 To configure your current shell, you need to source\n#12 18.78 the corresponding env file under /usr/local/cargo.\n#12 18.78 \n#12 18.78 This is usually done by running one of the following (note the leading DOT):\n#12 18.78 . \"/usr/local/cargo/env\"            # For sh/bash/zsh/ash/dash/pdksh\n#12 18.78 source \"/usr/local/cargo/env.fish\"  # For fish\n#12 18.78 source $\"/usr/local/cargo/env.nu\"  # For nushell\n#12 18.79 /bin/sh: 1: .: cannot open /root/.cargo/env: No such file\n#12 ERROR: process \"/bin/sh -c curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &&     . /root/.cargo/env &&     rustup toolchain install 1.86.0 &&     rustup default 1.86.0\" did not complete successfully: exit code: 2\n------\n > [ 6/11] RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &&     . /root/.cargo/env &&     rustup toolchain install 1.86.0 &&     rustup default 1.86.0:\n18.78 Cargo's bin directory (/usr/local/cargo/bin).\n18.78 \n18.78 To configure your current shell, you need to source\n18.78 the corresponding env file under /usr/local/cargo.\n18.78 \n18.78 This is usually done by running one of the following (note the leading DOT):\n18.78 . \"/usr/local/cargo/env\"            # For sh/bash/zsh/ash/dash/pdksh\n18.78 source \"/usr/local/cargo/env.fish\"  # For fish\n18.78 source $\"/usr/local/cargo/env.nu\"  # For nushell\n18.79 /bin/sh: 1: .: cannot open /root/.cargo/env: No such file\n------\nERROR: failed to build: failed to solve: process \"/bin/sh -c curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &&     . /root/.cargo/env &&     rustup toolchain install 1.86.0 &&     rustup default 1.86.0\" did not complete successfully: exit code: 2\n"
  },
  "run": {
    "success": false,
    "stdout": "",
    "stderr": ""
  }
}